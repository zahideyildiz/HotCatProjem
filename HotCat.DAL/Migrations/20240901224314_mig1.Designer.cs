// <auto-generated />
using System;
using HotCat.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotCat.DAL.Migrations
{
    [DbContext(typeof(HotCatContext))]
    [Migration("20240901224314_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotCat.Model.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("HotCat.Model.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("HotCat.Model.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Coffees",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 829, DateTimeKind.Local).AddTicks(9430),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Velit iure aliquam fugiat corrupti veniam.",
                            IsActive = true,
                            MasterId = new Guid("20fb1f8d-c3ec-4b80-bf78-fc78e13c22f8"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Teas",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 829, DateTimeKind.Local).AddTicks(9594),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Qui et optio et rerum cum est.",
                            IsActive = true,
                            MasterId = new Guid("5f8a5f21-2e40-4f1f-b3f2-01984d2d94f0"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Cold Beverages",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 829, DateTimeKind.Local).AddTicks(9617),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Velit nesciunt incidunt vel eligendi eveniet modi excepturi est hic.",
                            IsActive = true,
                            MasterId = new Guid("29ae6535-34ce-4ae5-961d-99e765b0a830"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            CategoryName = "Breakfast",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 829, DateTimeKind.Local).AddTicks(9642),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Aperiam voluptas necessitatibus debitis occaecati.",
                            IsActive = true,
                            MasterId = new Guid("f7791d64-5b7b-4dfb-b253-cf82808f1625"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            CategoryName = "Salads",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 829, DateTimeKind.Local).AddTicks(9657),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Quisquam sint ea aperiam molestiae.",
                            IsActive = true,
                            MasterId = new Guid("e92130f9-16af-46d2-8070-2d6679123668"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            CategoryName = "Burgers",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 829, DateTimeKind.Local).AddTicks(9761),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Harum ratione voluptatum deserunt ut dolor soluta quam.",
                            IsActive = true,
                            MasterId = new Guid("99ca6d4c-bd07-4b07-8463-26ee9d7c845f"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            CategoryName = "Pizzas",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 829, DateTimeKind.Local).AddTicks(9789),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Nesciunt ut incidunt.",
                            IsActive = true,
                            MasterId = new Guid("36da5c29-576c-405a-ad41-e585a33d16c4"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            CategoryName = "Desserts",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 829, DateTimeKind.Local).AddTicks(9797),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Molestias ut fuga et.",
                            IsActive = true,
                            MasterId = new Guid("d4cceaeb-9082-41d0-8ef2-1c6412b916d0"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            CategoryName = "Cakes",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 829, DateTimeKind.Local).AddTicks(9807),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Ullam in cumque eaque mollitia architecto porro repudiandae.",
                            IsActive = true,
                            MasterId = new Guid("94f80b30-651e-4034-ae3b-c0703d26bb65"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            CategoryName = "Ice Creams",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 829, DateTimeKind.Local).AddTicks(9822),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Labore esse illo optio fuga.",
                            IsActive = true,
                            MasterId = new Guid("5c149d78-8a70-4880-ba8f-6a39d5c04930"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HotCat.Model.Entities.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<Guid?>("AppUserId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("HotCat.Model.Entities.OrderDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 830, DateTimeKind.Local).AddTicks(8495),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.33000000000000002,
                            ImagePath = "https://picsum.photos/640/480/?image=955",
                            IsActive = true,
                            MasterId = new Guid("9d378910-ce9b-45ce-b7ab-7e2eb7ac462e"),
                            ProductName = "Cookie",
                            Status = 0,
                            UnitPrice = 354.52m,
                            UnitsInStock = (short)83,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CategoryId = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 830, DateTimeKind.Local).AddTicks(8615),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.0,
                            ImagePath = "https://picsum.photos/640/480/?image=418",
                            IsActive = true,
                            MasterId = new Guid("d2fa1ea7-3db5-4d9c-9ca0-f3983e2d43d8"),
                            ProductName = "Latte",
                            Status = 0,
                            UnitPrice = 225.66m,
                            UnitsInStock = (short)68,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CategoryId = 5,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 830, DateTimeKind.Local).AddTicks(8626),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.070000000000000007,
                            ImagePath = "https://picsum.photos/640/480/?image=147",
                            IsActive = true,
                            MasterId = new Guid("b31f0c2c-e434-4072-a52c-b663fe3983c4"),
                            ProductName = "Flat White",
                            Status = 0,
                            UnitPrice = 884.02m,
                            UnitsInStock = (short)79,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            CategoryId = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 830, DateTimeKind.Local).AddTicks(8641),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.19,
                            ImagePath = "https://picsum.photos/640/480/?image=749",
                            IsActive = true,
                            MasterId = new Guid("b41ac594-61d5-4a1a-ab9f-e63547ced5d4"),
                            ProductName = "Flat White",
                            Status = 0,
                            UnitPrice = 303.33m,
                            UnitsInStock = (short)88,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            CategoryId = 10,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 830, DateTimeKind.Local).AddTicks(8649),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.40000000000000002,
                            ImagePath = "https://picsum.photos/640/480/?image=418",
                            IsActive = true,
                            MasterId = new Guid("96ff49b9-3edf-42b7-9523-6c40223df7b4"),
                            ProductName = "Cold Brew",
                            Status = 0,
                            UnitPrice = 47.03m,
                            UnitsInStock = (short)99,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            CategoryId = 7,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 830, DateTimeKind.Local).AddTicks(8658),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.17999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=155",
                            IsActive = true,
                            MasterId = new Guid("4d86920d-d877-4de2-bfe3-02221ff764bb"),
                            ProductName = "Frappé",
                            Status = 0,
                            UnitPrice = 209.64m,
                            UnitsInStock = (short)79,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 830, DateTimeKind.Local).AddTicks(8666),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.47999999999999998,
                            ImagePath = "https://picsum.photos/640/480/?image=833",
                            IsActive = true,
                            MasterId = new Guid("c798cdd7-d829-433e-84e9-f88f700a65f2"),
                            ProductName = "Waffle",
                            Status = 0,
                            UnitPrice = 555.11m,
                            UnitsInStock = (short)5,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            CategoryId = 9,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 830, DateTimeKind.Local).AddTicks(8673),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.42999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=860",
                            IsActive = true,
                            MasterId = new Guid("86922286-0587-482c-9d37-6a2e6898859c"),
                            ProductName = "Cheesecake",
                            Status = 0,
                            UnitPrice = 814.27m,
                            UnitsInStock = (short)18,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 830, DateTimeKind.Local).AddTicks(8681),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.33000000000000002,
                            ImagePath = "https://picsum.photos/640/480/?image=725",
                            IsActive = true,
                            MasterId = new Guid("12d3c1a9-6d0e-4270-b0b5-54da06d8ee30"),
                            ProductName = "Frappé",
                            Status = 0,
                            UnitPrice = 927.63m,
                            UnitsInStock = (short)89,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 830, DateTimeKind.Local).AddTicks(8694),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.34000000000000002,
                            ImagePath = "https://picsum.photos/640/480/?image=826",
                            IsActive = true,
                            MasterId = new Guid("7256efe6-8d0b-41a9-b3c4-c24961813c4a"),
                            ProductName = "Flat White",
                            Status = 0,
                            UnitPrice = 508.45m,
                            UnitsInStock = (short)0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 11,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 830, DateTimeKind.Local).AddTicks(8701),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.31,
                            ImagePath = "https://picsum.photos/640/480/?image=278",
                            IsActive = true,
                            MasterId = new Guid("7763b271-ce2f-49f7-a51f-4c78b0122348"),
                            ProductName = "Cookie",
                            Status = 0,
                            UnitPrice = 556.01m,
                            UnitsInStock = (short)12,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 12,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 830, DateTimeKind.Local).AddTicks(8709),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.48999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=375",
                            IsActive = true,
                            MasterId = new Guid("26236afe-9aae-4216-bea0-05e47f28aeb2"),
                            ProductName = "Tiramisu",
                            Status = 0,
                            UnitPrice = 769.83m,
                            UnitsInStock = (short)21,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 13,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 830, DateTimeKind.Local).AddTicks(8716),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.10000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=59",
                            IsActive = true,
                            MasterId = new Guid("b81703e9-9f32-4135-b9cc-27cf11fabc9f"),
                            ProductName = "Brownie",
                            Status = 0,
                            UnitPrice = 373.62m,
                            UnitsInStock = (short)32,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 14,
                            CategoryId = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 830, DateTimeKind.Local).AddTicks(8723),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.35999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=449",
                            IsActive = true,
                            MasterId = new Guid("07804a19-1be5-485a-89d8-8485fd5650cf"),
                            ProductName = "Cappuccino",
                            Status = 0,
                            UnitPrice = 773.56m,
                            UnitsInStock = (short)38,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 15,
                            CategoryId = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 830, DateTimeKind.Local).AddTicks(8730),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.19,
                            ImagePath = "https://picsum.photos/640/480/?image=911",
                            IsActive = true,
                            MasterId = new Guid("1c21a1d0-87ec-4f1c-af06-2a66cc8db4c0"),
                            ProductName = "Espresso",
                            Status = 0,
                            UnitPrice = 531.29m,
                            UnitsInStock = (short)65,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 16,
                            CategoryId = 8,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 830, DateTimeKind.Local).AddTicks(8736),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.089999999999999997,
                            ImagePath = "https://picsum.photos/640/480/?image=780",
                            IsActive = true,
                            MasterId = new Guid("8f84ab23-c391-45b1-a633-66fd335b4c60"),
                            ProductName = "Muffin",
                            Status = 0,
                            UnitPrice = 789.27m,
                            UnitsInStock = (short)65,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 17,
                            CategoryId = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 830, DateTimeKind.Local).AddTicks(8742),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.070000000000000007,
                            ImagePath = "https://picsum.photos/640/480/?image=730",
                            IsActive = true,
                            MasterId = new Guid("ef677912-5663-4dda-a843-f106f446858b"),
                            ProductName = "Frappé",
                            Status = 0,
                            UnitPrice = 968.80m,
                            UnitsInStock = (short)13,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 18,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 830, DateTimeKind.Local).AddTicks(8750),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.34999999999999998,
                            ImagePath = "https://picsum.photos/640/480/?image=813",
                            IsActive = true,
                            MasterId = new Guid("87881dac-8462-4d1d-8d30-f63ff28f00f7"),
                            ProductName = "Cold Brew",
                            Status = 0,
                            UnitPrice = 999.36m,
                            UnitsInStock = (short)85,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 19,
                            CategoryId = 4,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 830, DateTimeKind.Local).AddTicks(8756),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.46000000000000002,
                            ImagePath = "https://picsum.photos/640/480/?image=488",
                            IsActive = true,
                            MasterId = new Guid("81c4b3b1-b874-4fc6-85b1-5502047df851"),
                            ProductName = "Chocolate Fondue",
                            Status = 0,
                            UnitPrice = 874.87m,
                            UnitsInStock = (short)46,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 20,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 1, 43, 14, 830, DateTimeKind.Local).AddTicks(8764),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.20999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=172",
                            IsActive = true,
                            MasterId = new Guid("43e9faf0-04bf-4994-921c-d2904917cbac"),
                            ProductName = "Macaron",
                            Status = 0,
                            UnitPrice = 859.67m,
                            UnitsInStock = (short)100,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HotCat.Model.Entities.Order", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", "AppUser")
                        .WithMany("Orders")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("HotCat.Model.Entities.OrderDetail", b =>
                {
                    b.HasOne("HotCat.Model.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotCat.Model.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Product", b =>
                {
                    b.HasOne("HotCat.Model.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotCat.Model.Entities.AppUser", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
