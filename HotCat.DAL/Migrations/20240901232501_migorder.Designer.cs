// <auto-generated />
using System;
using HotCat.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotCat.DAL.Migrations
{
    [DbContext(typeof(HotCatContext))]
    [Migration("20240901232501_migorder")]
    partial class migorder
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotCat.Model.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("HotCat.Model.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("HotCat.Model.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Coffees",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 305, DateTimeKind.Local).AddTicks(2825),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Maxime modi atque ipsa voluptatem beatae consequatur atque molestiae.",
                            IsActive = true,
                            MasterId = new Guid("4aceb8d3-8c88-4a4e-bc7a-bd735265a5ca"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Teas",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 305, DateTimeKind.Local).AddTicks(3016),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Voluptatem hic est asperiores non.",
                            IsActive = true,
                            MasterId = new Guid("53ecf42d-8109-4222-b333-7f0c2a6f7e46"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Cold Beverages",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 305, DateTimeKind.Local).AddTicks(3040),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Et necessitatibus dolorem.",
                            IsActive = true,
                            MasterId = new Guid("28ac829d-a1c3-4a2c-8b74-83c2210ad610"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            CategoryName = "Breakfast",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 305, DateTimeKind.Local).AddTicks(3055),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Ullam quam omnis nihil.",
                            IsActive = true,
                            MasterId = new Guid("983a1649-2c21-4eb1-8b22-7d301b98f03f"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            CategoryName = "Salads",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 305, DateTimeKind.Local).AddTicks(3071),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Consequatur exercitationem sit sequi et voluptas mollitia nihil qui.",
                            IsActive = true,
                            MasterId = new Guid("d1e396a3-3ba8-47f5-8585-fee7c3e71ff4"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            CategoryName = "Burgers",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 305, DateTimeKind.Local).AddTicks(3106),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Possimus ut aut aspernatur voluptas omnis sit dignissimos repudiandae fugiat.",
                            IsActive = true,
                            MasterId = new Guid("acae8bce-935d-42fe-b726-38629cd32686"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            CategoryName = "Pizzas",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 305, DateTimeKind.Local).AddTicks(3131),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Ut dolorem facere veritatis enim molestiae facilis corrupti.",
                            IsActive = true,
                            MasterId = new Guid("f1d13b30-ba59-4185-9a98-ba025fd1e15b"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            CategoryName = "Desserts",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 305, DateTimeKind.Local).AddTicks(3151),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Laudantium repellat et nesciunt voluptates iste qui.",
                            IsActive = true,
                            MasterId = new Guid("1d550bee-4ba4-4dc8-9c97-aeee90b3856a"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            CategoryName = "Cakes",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 305, DateTimeKind.Local).AddTicks(3177),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Dolorem neque eaque.",
                            IsActive = true,
                            MasterId = new Guid("8229d829-f0d6-45cb-89d6-d22e1cbbb80f"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            CategoryName = "Ice Creams",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 305, DateTimeKind.Local).AddTicks(3189),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Maxime animi provident facere iusto nam dolor.",
                            IsActive = true,
                            MasterId = new Guid("94beed30-0a77-4b8d-84ca-a9aa2902b219"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HotCat.Model.Entities.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<Guid?>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("OrderDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 308, DateTimeKind.Local).AddTicks(3979),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Floyd Carter",
                            IsActive = true,
                            MasterId = new Guid("185824ca-3eaf-43eb-b632-5ba7e539eff3"),
                            OrderDate = new DateTime(2024, 7, 9, 21, 42, 19, 153, DateTimeKind.Local).AddTicks(7987),
                            Status = 0,
                            TotalAmount = 395.05m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 309, DateTimeKind.Local).AddTicks(3012),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Floyd Carter",
                            IsActive = true,
                            MasterId = new Guid("b9cf0eb7-7e52-424e-aa1f-1313dc7d80f5"),
                            OrderDate = new DateTime(2024, 4, 19, 12, 47, 33, 504, DateTimeKind.Local).AddTicks(2092),
                            Status = 0,
                            TotalAmount = 200.97m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 309, DateTimeKind.Local).AddTicks(3100),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Floyd Carter",
                            IsActive = true,
                            MasterId = new Guid("e73a1737-5adc-46bd-b0d0-182daec54c3b"),
                            OrderDate = new DateTime(2024, 5, 15, 16, 46, 14, 656, DateTimeKind.Local).AddTicks(4246),
                            Status = 0,
                            TotalAmount = 111.65m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 309, DateTimeKind.Local).AddTicks(3110),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Floyd Carter",
                            IsActive = true,
                            MasterId = new Guid("d18a6879-0451-4390-b380-f7658e362d94"),
                            OrderDate = new DateTime(2024, 3, 4, 3, 9, 18, 514, DateTimeKind.Local).AddTicks(3508),
                            Status = 0,
                            TotalAmount = 436.55m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 309, DateTimeKind.Local).AddTicks(3118),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Floyd Carter",
                            IsActive = true,
                            MasterId = new Guid("0e87f2c9-647c-4abb-bbef-36d8c70573d4"),
                            OrderDate = new DateTime(2023, 10, 28, 1, 49, 42, 673, DateTimeKind.Local).AddTicks(4245),
                            Status = 0,
                            TotalAmount = 277.46m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 309, DateTimeKind.Local).AddTicks(3128),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Floyd Carter",
                            IsActive = true,
                            MasterId = new Guid("e2957b88-90e4-4c17-88ce-36057170f1a0"),
                            OrderDate = new DateTime(2024, 7, 21, 3, 36, 7, 188, DateTimeKind.Local).AddTicks(3552),
                            Status = 0,
                            TotalAmount = 483.56m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 309, DateTimeKind.Local).AddTicks(3135),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Floyd Carter",
                            IsActive = true,
                            MasterId = new Guid("d70a302f-aaa7-484e-9654-79fc8ce74818"),
                            OrderDate = new DateTime(2024, 2, 28, 11, 45, 0, 661, DateTimeKind.Local).AddTicks(9294),
                            Status = 0,
                            TotalAmount = 216.25m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 309, DateTimeKind.Local).AddTicks(3143),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Floyd Carter",
                            IsActive = true,
                            MasterId = new Guid("ccc7c4d3-78c9-43f2-a081-8387e3e6eca6"),
                            OrderDate = new DateTime(2024, 7, 6, 21, 16, 0, 465, DateTimeKind.Local).AddTicks(543),
                            Status = 0,
                            TotalAmount = 274.21m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 309, DateTimeKind.Local).AddTicks(3157),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Floyd Carter",
                            IsActive = true,
                            MasterId = new Guid("1ffbf271-66a7-46a4-9213-40e9c33166c1"),
                            OrderDate = new DateTime(2024, 9, 1, 5, 51, 33, 59, DateTimeKind.Local).AddTicks(8838),
                            Status = 0,
                            TotalAmount = 396.11m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 309, DateTimeKind.Local).AddTicks(3165),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Floyd Carter",
                            IsActive = true,
                            MasterId = new Guid("c358d1fa-93ce-42b4-b3d3-176ba7d6a99a"),
                            OrderDate = new DateTime(2023, 10, 3, 3, 17, 48, 836, DateTimeKind.Local).AddTicks(7704),
                            Status = 0,
                            TotalAmount = 237.94m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 11,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 309, DateTimeKind.Local).AddTicks(3173),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Floyd Carter",
                            IsActive = true,
                            MasterId = new Guid("cf87d2ce-4569-41c1-8bc0-24021ad11b0f"),
                            OrderDate = new DateTime(2023, 10, 2, 22, 55, 23, 705, DateTimeKind.Local).AddTicks(4476),
                            Status = 0,
                            TotalAmount = 398.65m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 12,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 309, DateTimeKind.Local).AddTicks(3180),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Floyd Carter",
                            IsActive = true,
                            MasterId = new Guid("4d3d1239-afb3-4d6a-b1d9-d27cf9c4ed90"),
                            OrderDate = new DateTime(2024, 7, 17, 3, 8, 48, 767, DateTimeKind.Local).AddTicks(3402),
                            Status = 0,
                            TotalAmount = 245.18m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 13,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 309, DateTimeKind.Local).AddTicks(3186),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Floyd Carter",
                            IsActive = true,
                            MasterId = new Guid("dc993c6d-dad7-4ff9-b651-5d81a7e17f43"),
                            OrderDate = new DateTime(2023, 11, 17, 14, 28, 8, 455, DateTimeKind.Local).AddTicks(9588),
                            Status = 0,
                            TotalAmount = 336.09m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 14,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 309, DateTimeKind.Local).AddTicks(3192),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Floyd Carter",
                            IsActive = true,
                            MasterId = new Guid("c0f06cf3-7cf6-4630-a8ae-912168113e36"),
                            OrderDate = new DateTime(2023, 9, 14, 19, 57, 34, 315, DateTimeKind.Local).AddTicks(6546),
                            Status = 0,
                            TotalAmount = 81.34m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 15,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 309, DateTimeKind.Local).AddTicks(3200),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Floyd Carter",
                            IsActive = true,
                            MasterId = new Guid("2b7ef402-2b7f-4742-ab6c-6a143ffd785f"),
                            OrderDate = new DateTime(2023, 9, 19, 6, 32, 35, 337, DateTimeKind.Local).AddTicks(3417),
                            Status = 0,
                            TotalAmount = 353.27m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 16,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 309, DateTimeKind.Local).AddTicks(3207),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Floyd Carter",
                            IsActive = true,
                            MasterId = new Guid("267e8db8-35a1-4190-9827-d1a20a6773ca"),
                            OrderDate = new DateTime(2024, 7, 12, 23, 41, 4, 609, DateTimeKind.Local).AddTicks(8579),
                            Status = 0,
                            TotalAmount = 246.70m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 17,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 309, DateTimeKind.Local).AddTicks(3214),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Floyd Carter",
                            IsActive = true,
                            MasterId = new Guid("14c6aa83-6016-459e-89a1-bf60aa126d4f"),
                            OrderDate = new DateTime(2024, 7, 29, 13, 5, 3, 315, DateTimeKind.Local).AddTicks(7678),
                            Status = 0,
                            TotalAmount = 426.45m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 18,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 309, DateTimeKind.Local).AddTicks(3222),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Floyd Carter",
                            IsActive = true,
                            MasterId = new Guid("e074cfcb-396a-4b3a-b336-cae338097901"),
                            OrderDate = new DateTime(2023, 10, 20, 14, 20, 35, 938, DateTimeKind.Local).AddTicks(8116),
                            Status = 0,
                            TotalAmount = 132.86m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 19,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 309, DateTimeKind.Local).AddTicks(3230),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Floyd Carter",
                            IsActive = true,
                            MasterId = new Guid("1f4f8cf1-3036-4482-8b87-898b465ae66c"),
                            OrderDate = new DateTime(2023, 9, 21, 19, 26, 49, 163, DateTimeKind.Local).AddTicks(8769),
                            Status = 0,
                            TotalAmount = 403.17m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 20,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 309, DateTimeKind.Local).AddTicks(3237),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Floyd Carter",
                            IsActive = true,
                            MasterId = new Guid("bb87dbd6-8484-434e-a0de-8ac2ef87ff97"),
                            OrderDate = new DateTime(2024, 1, 24, 19, 26, 1, 688, DateTimeKind.Local).AddTicks(8413),
                            Status = 0,
                            TotalAmount = 368.62m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HotCat.Model.Entities.OrderDetail", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryId = 8,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 306, DateTimeKind.Local).AddTicks(5147),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.32000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=750",
                            IsActive = true,
                            MasterId = new Guid("19fa76cf-f07e-48b4-afd4-b03a4e096abe"),
                            ProductName = "Profiterole",
                            Status = 0,
                            UnitPrice = 814.91m,
                            UnitsInStock = (short)17,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CategoryId = 9,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 306, DateTimeKind.Local).AddTicks(5290),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.34000000000000002,
                            ImagePath = "https://picsum.photos/640/480/?image=413",
                            IsActive = true,
                            MasterId = new Guid("db8e1096-06c3-4235-b68a-8163c18dbc37"),
                            ProductName = "Espresso Macchiato",
                            Status = 0,
                            UnitPrice = 821.70m,
                            UnitsInStock = (short)23,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CategoryId = 10,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 306, DateTimeKind.Local).AddTicks(5305),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.23000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=1065",
                            IsActive = true,
                            MasterId = new Guid("f260211b-f0f1-479b-91e8-ea8a4fab6b6a"),
                            ProductName = "Flat White",
                            Status = 0,
                            UnitPrice = 484.57m,
                            UnitsInStock = (short)68,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            CategoryId = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 306, DateTimeKind.Local).AddTicks(5315),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.40999999999999998,
                            ImagePath = "https://picsum.photos/640/480/?image=871",
                            IsActive = true,
                            MasterId = new Guid("8964a0ec-8416-44d9-a244-2c8c6ef1f647"),
                            ProductName = "Waffle",
                            Status = 0,
                            UnitPrice = 182.48m,
                            UnitsInStock = (short)27,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            CategoryId = 4,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 306, DateTimeKind.Local).AddTicks(5325),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.070000000000000007,
                            ImagePath = "https://picsum.photos/640/480/?image=233",
                            IsActive = true,
                            MasterId = new Guid("7aa902c7-5089-423e-8c41-d0a4e63ca225"),
                            ProductName = "Latte",
                            Status = 0,
                            UnitPrice = 231.02m,
                            UnitsInStock = (short)36,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 306, DateTimeKind.Local).AddTicks(5336),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.14000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=84",
                            IsActive = true,
                            MasterId = new Guid("3afb5887-9ae5-4d18-b232-84d559df8815"),
                            ProductName = "Iced Coffee",
                            Status = 0,
                            UnitPrice = 383.59m,
                            UnitsInStock = (short)78,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            CategoryId = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 306, DateTimeKind.Local).AddTicks(5352),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.40999999999999998,
                            ImagePath = "https://picsum.photos/640/480/?image=594",
                            IsActive = true,
                            MasterId = new Guid("1162cbe4-daac-4857-8135-1bad4ee469f9"),
                            ProductName = "Espresso Macchiato",
                            Status = 0,
                            UnitPrice = 740.05m,
                            UnitsInStock = (short)94,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            CategoryId = 8,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 306, DateTimeKind.Local).AddTicks(5368),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.02,
                            ImagePath = "https://picsum.photos/640/480/?image=912",
                            IsActive = true,
                            MasterId = new Guid("343a0da9-923c-47d3-a895-919fb807e51b"),
                            ProductName = "Tiramisu",
                            Status = 0,
                            UnitPrice = 870.63m,
                            UnitsInStock = (short)85,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 306, DateTimeKind.Local).AddTicks(5379),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.42999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=56",
                            IsActive = true,
                            MasterId = new Guid("3fe450ee-4ea8-4f20-b519-7e8f7aeb0773"),
                            ProductName = "Pie",
                            Status = 0,
                            UnitPrice = 243.31m,
                            UnitsInStock = (short)68,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            CategoryId = 8,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 306, DateTimeKind.Local).AddTicks(5391),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.46000000000000002,
                            ImagePath = "https://picsum.photos/640/480/?image=696",
                            IsActive = true,
                            MasterId = new Guid("5583dad7-39fe-4c58-a7e9-2b551365e6c3"),
                            ProductName = "Profiterole",
                            Status = 0,
                            UnitPrice = 351.80m,
                            UnitsInStock = (short)8,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 11,
                            CategoryId = 9,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 306, DateTimeKind.Local).AddTicks(5400),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.17000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=1071",
                            IsActive = true,
                            MasterId = new Guid("c1494b8d-6716-45b8-9436-dd8272a1c29b"),
                            ProductName = "Affogato",
                            Status = 0,
                            UnitPrice = 462.36m,
                            UnitsInStock = (short)73,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 12,
                            CategoryId = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 306, DateTimeKind.Local).AddTicks(5408),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.029999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=42",
                            IsActive = true,
                            MasterId = new Guid("45db397d-9708-45b9-a1fd-2a83641f2e2e"),
                            ProductName = "Frappé",
                            Status = 0,
                            UnitPrice = 328.59m,
                            UnitsInStock = (short)85,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 13,
                            CategoryId = 5,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 306, DateTimeKind.Local).AddTicks(5417),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.029999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=659",
                            IsActive = true,
                            MasterId = new Guid("52f28031-d079-4351-8abc-877e6da1231c"),
                            ProductName = "Profiterole",
                            Status = 0,
                            UnitPrice = 452.57m,
                            UnitsInStock = (short)17,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 14,
                            CategoryId = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 306, DateTimeKind.Local).AddTicks(5426),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.41999999999999998,
                            ImagePath = "https://picsum.photos/640/480/?image=681",
                            IsActive = true,
                            MasterId = new Guid("25725137-218b-45c3-96b5-6eee5c9be2d8"),
                            ProductName = "Espresso",
                            Status = 0,
                            UnitPrice = 267.49m,
                            UnitsInStock = (short)63,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 15,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 306, DateTimeKind.Local).AddTicks(5438),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.17999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=835",
                            IsActive = true,
                            MasterId = new Guid("e22a85f4-385e-43f5-b4af-a049bedab7c6"),
                            ProductName = "Brownie",
                            Status = 0,
                            UnitPrice = 271.36m,
                            UnitsInStock = (short)30,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 16,
                            CategoryId = 8,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 306, DateTimeKind.Local).AddTicks(5447),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.050000000000000003,
                            ImagePath = "https://picsum.photos/640/480/?image=973",
                            IsActive = true,
                            MasterId = new Guid("34587df6-48ef-4344-b0ea-bd004726342d"),
                            ProductName = "Cappuccino",
                            Status = 0,
                            UnitPrice = 547.84m,
                            UnitsInStock = (short)15,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 17,
                            CategoryId = 8,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 306, DateTimeKind.Local).AddTicks(5456),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.38,
                            ImagePath = "https://picsum.photos/640/480/?image=956",
                            IsActive = true,
                            MasterId = new Guid("96397f37-8ce0-448e-a3f9-6c94c1fbb671"),
                            ProductName = "Frappé",
                            Status = 0,
                            UnitPrice = 844.58m,
                            UnitsInStock = (short)56,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 18,
                            CategoryId = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 306, DateTimeKind.Local).AddTicks(5466),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.40999999999999998,
                            ImagePath = "https://picsum.photos/640/480/?image=741",
                            IsActive = true,
                            MasterId = new Guid("f57b49ea-2e40-47ed-9ae1-409619cb56c8"),
                            ProductName = "Cold Brew",
                            Status = 0,
                            UnitPrice = 278.96m,
                            UnitsInStock = (short)50,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 19,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 306, DateTimeKind.Local).AddTicks(5480),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.22,
                            ImagePath = "https://picsum.photos/640/480/?image=938",
                            IsActive = true,
                            MasterId = new Guid("8584d271-5ab5-4deb-901b-5ac9030fb057"),
                            ProductName = "Flat White",
                            Status = 0,
                            UnitPrice = 241.69m,
                            UnitsInStock = (short)16,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 20,
                            CategoryId = 5,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 2, 2, 25, 1, 306, DateTimeKind.Local).AddTicks(5491),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.10000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=871",
                            IsActive = true,
                            MasterId = new Guid("fea8b4cb-f2cd-4254-9500-845b5e3a0db7"),
                            ProductName = "Chocolate Fondue",
                            Status = 0,
                            UnitPrice = 976.67m,
                            UnitsInStock = (short)46,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HotCat.Model.Entities.Order", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", "AppUser")
                        .WithMany("Orders")
                        .HasForeignKey("AppUserId");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("HotCat.Model.Entities.OrderDetail", b =>
                {
                    b.HasOne("HotCat.Model.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HotCat.Model.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Product", b =>
                {
                    b.HasOne("HotCat.Model.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotCat.Model.Entities.AppUser", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
