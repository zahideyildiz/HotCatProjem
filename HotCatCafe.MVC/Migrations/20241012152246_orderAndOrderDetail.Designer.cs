// <auto-generated />
using System;
using HotCat.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotCatCafe.MVC.Migrations
{
    [DbContext(typeof(HotCatContext))]
    [Migration("20241012152246_orderAndOrderDetail")]
    partial class orderAndOrderDetail
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotCat.Model.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("HotCat.Model.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("HotCat.Model.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Coffees",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 314, DateTimeKind.Local).AddTicks(6238),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Et perferendis qui voluptatibus molestias quis sit beatae.",
                            IsActive = true,
                            MasterId = new Guid("f8308d25-5a68-4969-b4f2-4efc71f6401f"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Teas",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 314, DateTimeKind.Local).AddTicks(6469),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Reprehenderit praesentium voluptas aut qui corrupti.",
                            IsActive = true,
                            MasterId = new Guid("0919726f-5b7c-4e93-8431-ccb89c579a19"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Cold Beverages",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 314, DateTimeKind.Local).AddTicks(6566),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Est aut eum et aut ad necessitatibus quam minus autem.",
                            IsActive = true,
                            MasterId = new Guid("0ccfaaa7-21f2-4ae1-ab71-dafefe50cc2c"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            CategoryName = "Breakfast",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 314, DateTimeKind.Local).AddTicks(6602),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Deserunt ipsum nam aut error sed tempore laborum.",
                            IsActive = true,
                            MasterId = new Guid("49321e2e-c984-4c4c-8885-de6017a0cf3f"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            CategoryName = "Salads",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 314, DateTimeKind.Local).AddTicks(6629),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Amet nisi et.",
                            IsActive = true,
                            MasterId = new Guid("1979834b-6c69-495b-9512-37853e6e37ed"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            CategoryName = "Burgers",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 314, DateTimeKind.Local).AddTicks(6645),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Dolor iusto qui ipsam pariatur modi aspernatur.",
                            IsActive = true,
                            MasterId = new Guid("8b540b38-5f46-496c-9559-98f7a47247d5"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            CategoryName = "Pizzas",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 314, DateTimeKind.Local).AddTicks(6667),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Eos quia temporibus eaque possimus voluptates nesciunt dolor et incidunt.",
                            IsActive = true,
                            MasterId = new Guid("585cced2-4340-4aee-a560-698f78f001dc"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            CategoryName = "Desserts",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 314, DateTimeKind.Local).AddTicks(6697),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Est dolorem sit beatae sunt dignissimos aliquam.",
                            IsActive = true,
                            MasterId = new Guid("26aaa4cb-5ba2-4097-a76a-815c8ec154a3"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            CategoryName = "Cakes",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 314, DateTimeKind.Local).AddTicks(6718),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Hic error eos ipsum animi.",
                            IsActive = true,
                            MasterId = new Guid("33dd49f3-b860-44ae-accc-268fa674b35d"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            CategoryName = "Ice Creams",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 314, DateTimeKind.Local).AddTicks(6768),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "İste itaque corrupti vero nam aspernatur animi.",
                            IsActive = true,
                            MasterId = new Guid("cb22704f-cf7c-4656-be3a-2265259852b3"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HotCat.Model.Entities.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<Guid?>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("OrderDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 317, DateTimeKind.Local).AddTicks(9231),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("2fa7baff-a459-4832-9f0a-4053d40089e9"),
                            OrderDate = new DateTime(2023, 11, 23, 11, 18, 34, 204, DateTimeKind.Local).AddTicks(2103),
                            Status = 0,
                            TotalAmount = 121.44m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 317, DateTimeKind.Local).AddTicks(9326),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("b3126753-69e3-4eca-9316-db065a3c0ded"),
                            OrderDate = new DateTime(2024, 10, 1, 13, 31, 59, 131, DateTimeKind.Local).AddTicks(4803),
                            Status = 0,
                            TotalAmount = 45.93m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 317, DateTimeKind.Local).AddTicks(9342),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("6933d215-7394-4115-8964-114bd11fd81c"),
                            OrderDate = new DateTime(2023, 12, 4, 8, 5, 51, 480, DateTimeKind.Local).AddTicks(1456),
                            Status = 0,
                            TotalAmount = 490.77m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 317, DateTimeKind.Local).AddTicks(9355),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("3f8e0fac-4363-4d69-b2d9-221da7b58a24"),
                            OrderDate = new DateTime(2024, 1, 30, 10, 54, 11, 558, DateTimeKind.Local).AddTicks(9627),
                            Status = 0,
                            TotalAmount = 372.76m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 317, DateTimeKind.Local).AddTicks(9361),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("da55ef0b-cca5-45d8-9fff-253ee7934591"),
                            OrderDate = new DateTime(2023, 10, 23, 20, 37, 9, 939, DateTimeKind.Local).AddTicks(7082),
                            Status = 0,
                            TotalAmount = 223.32m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 317, DateTimeKind.Local).AddTicks(9369),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("29eddddc-9789-4127-a724-d8c0a2aa90de"),
                            OrderDate = new DateTime(2023, 12, 26, 12, 19, 3, 178, DateTimeKind.Local).AddTicks(6349),
                            Status = 0,
                            TotalAmount = 185.65m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 317, DateTimeKind.Local).AddTicks(9375),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("9884cf1f-9f47-4a9f-a574-82f325e7dcb4"),
                            OrderDate = new DateTime(2023, 11, 4, 22, 34, 40, 797, DateTimeKind.Local).AddTicks(6953),
                            Status = 0,
                            TotalAmount = 153.47m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 317, DateTimeKind.Local).AddTicks(9380),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("e35ebd2b-ad0e-435c-a598-31a70f9345d6"),
                            OrderDate = new DateTime(2023, 12, 26, 1, 32, 56, 204, DateTimeKind.Local).AddTicks(5803),
                            Status = 0,
                            TotalAmount = 53.47m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 317, DateTimeKind.Local).AddTicks(9387),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("995b6f50-1c0d-4dba-b6e6-fe21e6c8e5d4"),
                            OrderDate = new DateTime(2024, 2, 21, 10, 19, 13, 276, DateTimeKind.Local).AddTicks(7504),
                            Status = 0,
                            TotalAmount = 288.55m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 317, DateTimeKind.Local).AddTicks(9393),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("b82f5627-e399-47d3-9200-45c10818b981"),
                            OrderDate = new DateTime(2024, 6, 1, 22, 20, 48, 808, DateTimeKind.Local).AddTicks(4559),
                            Status = 0,
                            TotalAmount = 426.08m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 11,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 317, DateTimeKind.Local).AddTicks(9399),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("821deab5-4f52-49d1-a8ab-2ded56d96bfa"),
                            OrderDate = new DateTime(2024, 8, 1, 9, 58, 49, 827, DateTimeKind.Local).AddTicks(4767),
                            Status = 0,
                            TotalAmount = 469.60m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 12,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 317, DateTimeKind.Local).AddTicks(9407),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("a3524f74-dd16-4797-b9b4-5425269c00a9"),
                            OrderDate = new DateTime(2024, 5, 11, 1, 1, 17, 724, DateTimeKind.Local).AddTicks(9947),
                            Status = 0,
                            TotalAmount = 376.89m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 13,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 317, DateTimeKind.Local).AddTicks(9412),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("efa03914-8aeb-4a3d-86a9-35dace15103e"),
                            OrderDate = new DateTime(2023, 11, 24, 18, 23, 18, 696, DateTimeKind.Local).AddTicks(2163),
                            Status = 0,
                            TotalAmount = 209.28m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 14,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 317, DateTimeKind.Local).AddTicks(9418),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("d5352c56-4811-456d-b78f-370252e6e0b4"),
                            OrderDate = new DateTime(2024, 7, 9, 4, 20, 14, 364, DateTimeKind.Local).AddTicks(2593),
                            Status = 0,
                            TotalAmount = 327.87m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 15,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 317, DateTimeKind.Local).AddTicks(9423),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("39df12f1-4943-46ca-b958-e9f1bdc072c2"),
                            OrderDate = new DateTime(2024, 7, 5, 13, 43, 0, 931, DateTimeKind.Local).AddTicks(887),
                            Status = 0,
                            TotalAmount = 484.35m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 16,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 317, DateTimeKind.Local).AddTicks(9457),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("c67e8d01-caf5-4877-90b2-06d3e1b60e23"),
                            OrderDate = new DateTime(2024, 1, 2, 9, 17, 10, 133, DateTimeKind.Local).AddTicks(1768),
                            Status = 0,
                            TotalAmount = 252.53m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 17,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 317, DateTimeKind.Local).AddTicks(9462),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("a7e0b99a-9806-415a-8f7e-8ed93b614b5e"),
                            OrderDate = new DateTime(2024, 8, 9, 3, 4, 52, 505, DateTimeKind.Local).AddTicks(4791),
                            Status = 0,
                            TotalAmount = 216.68m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 18,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 317, DateTimeKind.Local).AddTicks(9469),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("2fd93622-34e9-4ff6-8fab-420cef96ae2a"),
                            OrderDate = new DateTime(2023, 12, 6, 15, 3, 44, 110, DateTimeKind.Local).AddTicks(7062),
                            Status = 0,
                            TotalAmount = 268.41m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 19,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 317, DateTimeKind.Local).AddTicks(9474),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("a50c93b2-129c-4175-9bb7-90855e0d468c"),
                            OrderDate = new DateTime(2024, 6, 14, 14, 46, 3, 995, DateTimeKind.Local).AddTicks(3911),
                            Status = 0,
                            TotalAmount = 472.93m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 20,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 317, DateTimeKind.Local).AddTicks(9481),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("e0e3b310-265b-43aa-b808-4cec53331684"),
                            OrderDate = new DateTime(2023, 12, 2, 6, 27, 24, 215, DateTimeKind.Local).AddTicks(55),
                            Status = 0,
                            TotalAmount = 365.56m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HotCat.Model.Entities.OrderDetail", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 316, DateTimeKind.Local).AddTicks(2611),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.20999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=212",
                            IsActive = true,
                            MasterId = new Guid("cc2809cf-e2c0-467c-ae82-0c34a6b9d203"),
                            ProductName = "Macaron",
                            Status = 0,
                            UnitPrice = 393.94m,
                            UnitsInStock = (short)29,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CategoryId = 4,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 316, DateTimeKind.Local).AddTicks(2761),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.02,
                            ImagePath = "https://picsum.photos/640/480/?image=387",
                            IsActive = true,
                            MasterId = new Guid("09b31461-573f-4518-ac95-09a07b56e502"),
                            ProductName = "Chai Tea Latte",
                            Status = 0,
                            UnitPrice = 864.98m,
                            UnitsInStock = (short)25,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CategoryId = 8,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 316, DateTimeKind.Local).AddTicks(2809),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.02,
                            ImagePath = "https://picsum.photos/640/480/?image=323",
                            IsActive = true,
                            MasterId = new Guid("c43457dc-5415-4cd1-9b00-6ad25ea44b77"),
                            ProductName = "Cappuccino",
                            Status = 0,
                            UnitPrice = 54.24m,
                            UnitsInStock = (short)22,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            CategoryId = 10,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 316, DateTimeKind.Local).AddTicks(2822),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.25,
                            ImagePath = "https://picsum.photos/640/480/?image=715",
                            IsActive = true,
                            MasterId = new Guid("256aa692-2173-4f4e-b6fd-548b5a5fa36e"),
                            ProductName = "Flat White",
                            Status = 0,
                            UnitPrice = 502.32m,
                            UnitsInStock = (short)81,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            CategoryId = 9,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 316, DateTimeKind.Local).AddTicks(2832),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.12,
                            ImagePath = "https://picsum.photos/640/480/?image=995",
                            IsActive = true,
                            MasterId = new Guid("7833e5fa-5d0e-4387-8ee6-84b972f6fe19"),
                            ProductName = "Iced Coffee",
                            Status = 0,
                            UnitPrice = 632.15m,
                            UnitsInStock = (short)98,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            CategoryId = 9,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 316, DateTimeKind.Local).AddTicks(2845),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.12,
                            ImagePath = "https://picsum.photos/640/480/?image=1016",
                            IsActive = true,
                            MasterId = new Guid("9ba6b106-4168-400c-9b05-a960095515d2"),
                            ProductName = "Muffin",
                            Status = 0,
                            UnitPrice = 7.67m,
                            UnitsInStock = (short)41,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            CategoryId = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 316, DateTimeKind.Local).AddTicks(2856),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.25,
                            ImagePath = "https://picsum.photos/640/480/?image=801",
                            IsActive = true,
                            MasterId = new Guid("49370894-85e3-405d-8708-f4bbf3043050"),
                            ProductName = "Americano",
                            Status = 0,
                            UnitPrice = 846.36m,
                            UnitsInStock = (short)62,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            CategoryId = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 316, DateTimeKind.Local).AddTicks(2871),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.23000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=651",
                            IsActive = true,
                            MasterId = new Guid("51c0eb49-2867-4ff3-9ce2-3a3c65a79e95"),
                            ProductName = "Chai Tea Latte",
                            Status = 0,
                            UnitPrice = 170.11m,
                            UnitsInStock = (short)61,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            CategoryId = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 316, DateTimeKind.Local).AddTicks(2878),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.45000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=878",
                            IsActive = true,
                            MasterId = new Guid("a3409f77-00cc-4052-aca3-60a10641b112"),
                            ProductName = "Frappé",
                            Status = 0,
                            UnitPrice = 271.73m,
                            UnitsInStock = (short)74,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            CategoryId = 5,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 316, DateTimeKind.Local).AddTicks(2886),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.28000000000000003,
                            ImagePath = "https://picsum.photos/640/480/?image=234",
                            IsActive = true,
                            MasterId = new Guid("646945c1-2151-4212-881e-aaf48962dc4a"),
                            ProductName = "Affogato",
                            Status = 0,
                            UnitPrice = 159.33m,
                            UnitsInStock = (short)82,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 11,
                            CategoryId = 8,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 316, DateTimeKind.Local).AddTicks(2893),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.0,
                            ImagePath = "https://picsum.photos/640/480/?image=893",
                            IsActive = true,
                            MasterId = new Guid("0540a0c0-f7cc-47c8-910a-c051bccf1d62"),
                            ProductName = "Waffle",
                            Status = 0,
                            UnitPrice = 622.21m,
                            UnitsInStock = (short)40,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 12,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 316, DateTimeKind.Local).AddTicks(2901),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.040000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=726",
                            IsActive = true,
                            MasterId = new Guid("2d331869-1f09-410a-9e2d-7edd3752007f"),
                            ProductName = "Muffin",
                            Status = 0,
                            UnitPrice = 491.25m,
                            UnitsInStock = (short)3,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 13,
                            CategoryId = 10,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 316, DateTimeKind.Local).AddTicks(2907),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.20000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=759",
                            IsActive = true,
                            MasterId = new Guid("93f888cf-f8fd-417c-9294-52cf8f40a80b"),
                            ProductName = "Americano",
                            Status = 0,
                            UnitPrice = 456.11m,
                            UnitsInStock = (short)51,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 14,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 316, DateTimeKind.Local).AddTicks(2939),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.42999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=344",
                            IsActive = true,
                            MasterId = new Guid("84ac1e67-fec3-46ca-b184-6c7e3d5a8c7f"),
                            ProductName = "Frappé",
                            Status = 0,
                            UnitPrice = 313.76m,
                            UnitsInStock = (short)80,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 15,
                            CategoryId = 10,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 316, DateTimeKind.Local).AddTicks(2948),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.20999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=588",
                            IsActive = true,
                            MasterId = new Guid("7872f8fd-ee7f-4c56-8688-d08b6e37a3a2"),
                            ProductName = "Waffle",
                            Status = 0,
                            UnitPrice = 238.56m,
                            UnitsInStock = (short)45,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 16,
                            CategoryId = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 316, DateTimeKind.Local).AddTicks(2957),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.28999999999999998,
                            ImagePath = "https://picsum.photos/640/480/?image=517",
                            IsActive = true,
                            MasterId = new Guid("194c8948-63a3-4a53-a90a-58f7ffc6c64e"),
                            ProductName = "Iced Coffee",
                            Status = 0,
                            UnitPrice = 673.66m,
                            UnitsInStock = (short)17,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 17,
                            CategoryId = 7,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 316, DateTimeKind.Local).AddTicks(2964),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.41999999999999998,
                            ImagePath = "https://picsum.photos/640/480/?image=18",
                            IsActive = true,
                            MasterId = new Guid("a71af0b8-d1bb-404a-b0dc-658e03b58951"),
                            ProductName = "Latte",
                            Status = 0,
                            UnitPrice = 960.84m,
                            UnitsInStock = (short)59,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 18,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 316, DateTimeKind.Local).AddTicks(2972),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.5,
                            ImagePath = "https://picsum.photos/640/480/?image=728",
                            IsActive = true,
                            MasterId = new Guid("c88dff51-2caf-4ae0-bf0f-d41dcf9d041e"),
                            ProductName = "Muffin",
                            Status = 0,
                            UnitPrice = 367.14m,
                            UnitsInStock = (short)90,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 19,
                            CategoryId = 5,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 316, DateTimeKind.Local).AddTicks(2979),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.25,
                            ImagePath = "https://picsum.photos/640/480/?image=40",
                            IsActive = true,
                            MasterId = new Guid("e83d63db-206b-49c1-aa1a-7177862f1e4f"),
                            ProductName = "Cappuccino",
                            Status = 0,
                            UnitPrice = 66.91m,
                            UnitsInStock = (short)56,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 20,
                            CategoryId = 10,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 12, 18, 22, 46, 316, DateTimeKind.Local).AddTicks(2986),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.11,
                            ImagePath = "https://picsum.photos/640/480/?image=784",
                            IsActive = true,
                            MasterId = new Guid("ec9d5b33-f968-4c13-b595-01781cde45be"),
                            ProductName = "Americano",
                            Status = 0,
                            UnitPrice = 291.77m,
                            UnitsInStock = (short)44,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HotCat.Model.Entities.Order", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", "AppUser")
                        .WithMany("Orders")
                        .HasForeignKey("AppUserId");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("HotCat.Model.Entities.OrderDetail", b =>
                {
                    b.HasOne("HotCat.Model.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HotCat.Model.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Product", b =>
                {
                    b.HasOne("HotCat.Model.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotCat.Model.Entities.AppUser", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
