// <auto-generated />
using System;
using HotCat.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotCatCafe.MVC.Migrations
{
    [DbContext(typeof(HotCatContext))]
    [Migration("20241017145113_Tables")]
    partial class Tables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotCat.Model.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("HotCat.Model.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("HotCat.Model.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Coffees",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 818, DateTimeKind.Local).AddTicks(6010),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Recusandae ab qui similique animi debitis veritatis.",
                            IsActive = true,
                            MasterId = new Guid("fb56bde3-017c-4745-91ba-f1df02455bb0"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Teas",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 818, DateTimeKind.Local).AddTicks(6172),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "İncidunt repellat quaerat animi unde ut omnis hic in omnis.",
                            IsActive = true,
                            MasterId = new Guid("0cb68f36-02c1-41f1-b81e-9b68fb9dd08a"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Cold Beverages",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 818, DateTimeKind.Local).AddTicks(6202),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "İnventore tempora incidunt sint repellendus.",
                            IsActive = true,
                            MasterId = new Guid("126cf40d-7730-4480-8991-5e835c65f81d"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            CategoryName = "Breakfast",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 818, DateTimeKind.Local).AddTicks(6217),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Perspiciatis quia nulla sunt ratione iure nihil accusantium adipisci saepe.",
                            IsActive = true,
                            MasterId = new Guid("f3e06cb0-d47a-44c9-a0c6-9aa3a61bc6c6"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            CategoryName = "Salads",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 818, DateTimeKind.Local).AddTicks(6281),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Est voluptatem enim reiciendis quod.",
                            IsActive = true,
                            MasterId = new Guid("37bf577c-1d10-4cf0-84b6-9fedf1d7fb5c"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            CategoryName = "Burgers",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 818, DateTimeKind.Local).AddTicks(6299),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Veniam blanditiis qui aut aut minus.",
                            IsActive = true,
                            MasterId = new Guid("c2d81276-03d3-4634-9ab3-58f06fdc6c59"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            CategoryName = "Pizzas",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 818, DateTimeKind.Local).AddTicks(6317),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Aut repellat rerum.",
                            IsActive = true,
                            MasterId = new Guid("e66a080a-ab4a-4c99-8f24-ca9edfdb4f3b"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            CategoryName = "Desserts",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 818, DateTimeKind.Local).AddTicks(6326),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Rem quia tempore nulla.",
                            IsActive = true,
                            MasterId = new Guid("70413b96-48f4-4bf1-8875-db03f891c526"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            CategoryName = "Cakes",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 818, DateTimeKind.Local).AddTicks(6338),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Delectus tempore temporibus rem vitae est.",
                            IsActive = true,
                            MasterId = new Guid("ee636159-7383-45ee-9413-632572591ccd"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            CategoryName = "Ice Creams",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 818, DateTimeKind.Local).AddTicks(6354),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Similique aut culpa qui deserunt.",
                            IsActive = true,
                            MasterId = new Guid("bf31dc0f-0002-40ee-af70-a39c9f411610"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HotCat.Model.Entities.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<Guid?>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("OrderDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TableId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserId");

                    b.HasIndex("TableId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 821, DateTimeKind.Local).AddTicks(902),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("01f0ca49-b31b-4f83-b40e-2be2da6f06e8"),
                            OrderDate = new DateTime(2024, 9, 4, 12, 13, 12, 278, DateTimeKind.Local).AddTicks(8223),
                            Status = 0,
                            TotalAmount = 297.05m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 821, DateTimeKind.Local).AddTicks(977),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("a1ddb400-c3d0-4d80-a6c3-e38acb2bdaa3"),
                            OrderDate = new DateTime(2024, 7, 22, 12, 47, 16, 586, DateTimeKind.Local).AddTicks(7602),
                            Status = 0,
                            TotalAmount = 272.67m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 821, DateTimeKind.Local).AddTicks(986),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("f7ae01c8-2a35-4641-8a3f-c8f1b066923b"),
                            OrderDate = new DateTime(2024, 5, 31, 12, 50, 13, 211, DateTimeKind.Local).AddTicks(3150),
                            Status = 0,
                            TotalAmount = 113.91m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 821, DateTimeKind.Local).AddTicks(992),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("627beb58-dce0-4afd-a9a2-14c03afa1da3"),
                            OrderDate = new DateTime(2024, 5, 22, 4, 12, 48, 639, DateTimeKind.Local).AddTicks(6878),
                            Status = 0,
                            TotalAmount = 423.07m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 821, DateTimeKind.Local).AddTicks(997),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("7b2f081e-804a-4346-8da0-380ed1ca6b04"),
                            OrderDate = new DateTime(2024, 9, 25, 6, 40, 4, 806, DateTimeKind.Local).AddTicks(6511),
                            Status = 0,
                            TotalAmount = 198.47m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 821, DateTimeKind.Local).AddTicks(1003),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("c91a2f70-d9e3-4912-9d90-046b70fb6efd"),
                            OrderDate = new DateTime(2024, 4, 9, 0, 59, 43, 523, DateTimeKind.Local).AddTicks(7360),
                            Status = 0,
                            TotalAmount = 435.61m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 821, DateTimeKind.Local).AddTicks(1013),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("17380f70-40bf-40c0-8e82-e64216027e4c"),
                            OrderDate = new DateTime(2023, 12, 3, 2, 10, 23, 705, DateTimeKind.Local).AddTicks(1626),
                            Status = 0,
                            TotalAmount = 340.07m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 821, DateTimeKind.Local).AddTicks(1018),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("483bb7c8-eae8-4825-8386-f34f373f6e31"),
                            OrderDate = new DateTime(2024, 7, 14, 19, 1, 2, 407, DateTimeKind.Local).AddTicks(824),
                            Status = 0,
                            TotalAmount = 249.75m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 821, DateTimeKind.Local).AddTicks(1023),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("09dd6d2f-6817-4adc-afd3-f3c6a99133c9"),
                            OrderDate = new DateTime(2024, 10, 6, 0, 22, 23, 782, DateTimeKind.Local).AddTicks(308),
                            Status = 0,
                            TotalAmount = 285.22m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 821, DateTimeKind.Local).AddTicks(1029),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("09cc64dd-87cb-40fd-b27a-82341ea56956"),
                            OrderDate = new DateTime(2024, 7, 8, 1, 11, 23, 842, DateTimeKind.Local).AddTicks(1080),
                            Status = 0,
                            TotalAmount = 356.77m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 11,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 821, DateTimeKind.Local).AddTicks(1033),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("4d683f10-ceae-4aaa-abe3-f3d1e5c76326"),
                            OrderDate = new DateTime(2024, 6, 28, 8, 52, 30, 731, DateTimeKind.Local).AddTicks(1459),
                            Status = 0,
                            TotalAmount = 70.05m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 12,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 821, DateTimeKind.Local).AddTicks(1039),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("3f333223-3e05-4be2-a6da-eea37898ca94"),
                            OrderDate = new DateTime(2024, 6, 25, 21, 41, 22, 876, DateTimeKind.Local).AddTicks(2603),
                            Status = 0,
                            TotalAmount = 292.28m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 13,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 821, DateTimeKind.Local).AddTicks(1043),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("fef0537b-c2fe-44f9-8a01-d9b17d39cde6"),
                            OrderDate = new DateTime(2024, 6, 30, 3, 27, 46, 959, DateTimeKind.Local).AddTicks(1051),
                            Status = 0,
                            TotalAmount = 169.03m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 14,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 821, DateTimeKind.Local).AddTicks(1048),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("7d470788-a332-45be-ba75-6c1de94f2184"),
                            OrderDate = new DateTime(2024, 9, 11, 8, 38, 42, 707, DateTimeKind.Local).AddTicks(5238),
                            Status = 0,
                            TotalAmount = 377.76m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 15,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 821, DateTimeKind.Local).AddTicks(1054),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("f9fa7005-7ade-49df-8d38-b5cf5b5940de"),
                            OrderDate = new DateTime(2023, 11, 12, 5, 1, 42, 872, DateTimeKind.Local).AddTicks(1485),
                            Status = 0,
                            TotalAmount = 151.11m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 16,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 821, DateTimeKind.Local).AddTicks(1059),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("0160ee3e-690c-4ca3-b86f-55c8c6be3980"),
                            OrderDate = new DateTime(2024, 8, 8, 11, 29, 19, 800, DateTimeKind.Local).AddTicks(7328),
                            Status = 0,
                            TotalAmount = 44.10m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 17,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 821, DateTimeKind.Local).AddTicks(1064),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("932e526b-347c-4097-8170-420547c28be8"),
                            OrderDate = new DateTime(2024, 1, 17, 12, 36, 23, 709, DateTimeKind.Local).AddTicks(4658),
                            Status = 0,
                            TotalAmount = 475.16m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 18,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 821, DateTimeKind.Local).AddTicks(1070),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("a88ec15b-116d-452e-9ac9-ea02e1316123"),
                            OrderDate = new DateTime(2024, 4, 4, 16, 15, 8, 763, DateTimeKind.Local).AddTicks(7199),
                            Status = 0,
                            TotalAmount = 410.50m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 19,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 821, DateTimeKind.Local).AddTicks(1074),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("d65b8553-2498-4029-85f3-27c562895be2"),
                            OrderDate = new DateTime(2024, 7, 12, 22, 8, 17, 231, DateTimeKind.Local).AddTicks(7495),
                            Status = 0,
                            TotalAmount = 392.36m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 20,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 821, DateTimeKind.Local).AddTicks(1079),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("c8fe3898-09e4-4ee6-9eab-e2b0c6a2afbb"),
                            OrderDate = new DateTime(2024, 10, 14, 12, 19, 5, 723, DateTimeKind.Local).AddTicks(8520),
                            Status = 0,
                            TotalAmount = 124.95m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HotCat.Model.Entities.OrderDetail", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryId = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 819, DateTimeKind.Local).AddTicks(7847),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.080000000000000002,
                            ImagePath = "https://picsum.photos/640/480/?image=535",
                            IsActive = true,
                            MasterId = new Guid("e2d8a8ab-da32-4c0f-a90e-4f96aff8fd2f"),
                            ProductName = "Tiramisu",
                            Status = 0,
                            UnitPrice = 1.97m,
                            UnitsInStock = (short)24,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CategoryId = 7,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 819, DateTimeKind.Local).AddTicks(7966),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.48999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=39",
                            IsActive = true,
                            MasterId = new Guid("d8aba7a2-32a9-4168-86f0-9b8396f011ca"),
                            ProductName = "Turkish Coffee",
                            Status = 0,
                            UnitPrice = 81.58m,
                            UnitsInStock = (short)97,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CategoryId = 4,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 819, DateTimeKind.Local).AddTicks(7984),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.17999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=132",
                            IsActive = true,
                            MasterId = new Guid("e7e1539f-af8f-4ae0-94d8-a12497129680"),
                            ProductName = "Macaron",
                            Status = 0,
                            UnitPrice = 544.96m,
                            UnitsInStock = (short)79,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            CategoryId = 8,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 819, DateTimeKind.Local).AddTicks(7993),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.33000000000000002,
                            ImagePath = "https://picsum.photos/640/480/?image=783",
                            IsActive = true,
                            MasterId = new Guid("5193829f-aad2-407f-8434-8e9f43fa8284"),
                            ProductName = "Cappuccino",
                            Status = 0,
                            UnitPrice = 200.70m,
                            UnitsInStock = (short)44,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            CategoryId = 4,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 819, DateTimeKind.Local).AddTicks(8002),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.40999999999999998,
                            ImagePath = "https://picsum.photos/640/480/?image=657",
                            IsActive = true,
                            MasterId = new Guid("8fb1520b-8793-4ab4-a4b8-cf12c90c113a"),
                            ProductName = "Profiterole",
                            Status = 0,
                            UnitPrice = 908.00m,
                            UnitsInStock = (short)24,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            CategoryId = 10,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 819, DateTimeKind.Local).AddTicks(8011),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.41999999999999998,
                            ImagePath = "https://picsum.photos/640/480/?image=52",
                            IsActive = true,
                            MasterId = new Guid("60fd8efe-5135-417f-8074-46cca764b480"),
                            ProductName = "Affogato",
                            Status = 0,
                            UnitPrice = 416.89m,
                            UnitsInStock = (short)16,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            CategoryId = 4,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 819, DateTimeKind.Local).AddTicks(8044),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.31,
                            ImagePath = "https://picsum.photos/640/480/?image=95",
                            IsActive = true,
                            MasterId = new Guid("e45fe5db-d2f5-43eb-83d5-2eae8a389b76"),
                            ProductName = "Turkish Coffee",
                            Status = 0,
                            UnitPrice = 754.12m,
                            UnitsInStock = (short)81,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 819, DateTimeKind.Local).AddTicks(8051),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.13,
                            ImagePath = "https://picsum.photos/640/480/?image=811",
                            IsActive = true,
                            MasterId = new Guid("91bba8d7-28ef-4c83-a32b-bf1a506ea3d4"),
                            ProductName = "Chai Tea Latte",
                            Status = 0,
                            UnitPrice = 761.70m,
                            UnitsInStock = (short)4,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            CategoryId = 7,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 819, DateTimeKind.Local).AddTicks(8058),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.080000000000000002,
                            ImagePath = "https://picsum.photos/640/480/?image=932",
                            IsActive = true,
                            MasterId = new Guid("cac09994-cf17-4852-afd3-b17201ce41a8"),
                            ProductName = "Espresso Macchiato",
                            Status = 0,
                            UnitPrice = 729.17m,
                            UnitsInStock = (short)97,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            CategoryId = 5,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 819, DateTimeKind.Local).AddTicks(8065),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.059999999999999998,
                            ImagePath = "https://picsum.photos/640/480/?image=864",
                            IsActive = true,
                            MasterId = new Guid("438318ca-9e6a-4106-8930-e8ceebc9f5e0"),
                            ProductName = "Brownie",
                            Status = 0,
                            UnitPrice = 625.41m,
                            UnitsInStock = (short)92,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 11,
                            CategoryId = 4,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 819, DateTimeKind.Local).AddTicks(8074),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.20999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=654",
                            IsActive = true,
                            MasterId = new Guid("72617e2d-2d99-437a-927e-2ba0ec09fd36"),
                            ProductName = "Frappé",
                            Status = 0,
                            UnitPrice = 357.74m,
                            UnitsInStock = (short)21,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 12,
                            CategoryId = 9,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 819, DateTimeKind.Local).AddTicks(8081),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.45000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=457",
                            IsActive = true,
                            MasterId = new Guid("42468e65-c785-4e37-a507-3da7e5ade145"),
                            ProductName = "Muffin",
                            Status = 0,
                            UnitPrice = 478.70m,
                            UnitsInStock = (short)65,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 13,
                            CategoryId = 8,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 819, DateTimeKind.Local).AddTicks(8088),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.40000000000000002,
                            ImagePath = "https://picsum.photos/640/480/?image=264",
                            IsActive = true,
                            MasterId = new Guid("6526557f-efce-4b9a-a245-ba7638cd064a"),
                            ProductName = "Cookie",
                            Status = 0,
                            UnitPrice = 106.33m,
                            UnitsInStock = (short)23,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 14,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 819, DateTimeKind.Local).AddTicks(8095),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.26000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=284",
                            IsActive = true,
                            MasterId = new Guid("6bb7f35a-20d1-4147-85dc-2308489cfd07"),
                            ProductName = "Turkish Coffee",
                            Status = 0,
                            UnitPrice = 127.44m,
                            UnitsInStock = (short)35,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 15,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 819, DateTimeKind.Local).AddTicks(8102),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.02,
                            ImagePath = "https://picsum.photos/640/480/?image=164",
                            IsActive = true,
                            MasterId = new Guid("3ef9db9a-bec8-49c6-8e6e-8dfb67cc2001"),
                            ProductName = "Frappé",
                            Status = 0,
                            UnitPrice = 518.89m,
                            UnitsInStock = (short)99,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 16,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 819, DateTimeKind.Local).AddTicks(8108),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.44,
                            ImagePath = "https://picsum.photos/640/480/?image=946",
                            IsActive = true,
                            MasterId = new Guid("380c2fd3-4791-4c97-aa02-0fbfc6434cda"),
                            ProductName = "Iced Coffee",
                            Status = 0,
                            UnitPrice = 397.79m,
                            UnitsInStock = (short)97,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 17,
                            CategoryId = 7,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 819, DateTimeKind.Local).AddTicks(8115),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.10000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=723",
                            IsActive = true,
                            MasterId = new Guid("91f350f5-d4ff-45d7-9903-d8826b5e55f4"),
                            ProductName = "Affogato",
                            Status = 0,
                            UnitPrice = 765.02m,
                            UnitsInStock = (short)27,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 18,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 819, DateTimeKind.Local).AddTicks(8147),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.12,
                            ImagePath = "https://picsum.photos/640/480/?image=502",
                            IsActive = true,
                            MasterId = new Guid("74a8dc26-b7d6-4f7f-ac1b-66ef6c146c0e"),
                            ProductName = "Cheesecake",
                            Status = 0,
                            UnitPrice = 33.80m,
                            UnitsInStock = (short)77,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 19,
                            CategoryId = 8,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 819, DateTimeKind.Local).AddTicks(8156),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.070000000000000007,
                            ImagePath = "https://picsum.photos/640/480/?image=745",
                            IsActive = true,
                            MasterId = new Guid("8d9fc3e7-9a38-4c1c-a2e2-094258769e68"),
                            ProductName = "Chai Tea Latte",
                            Status = 0,
                            UnitPrice = 2.97m,
                            UnitsInStock = (short)76,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 20,
                            CategoryId = 7,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 10, 17, 17, 51, 13, 819, DateTimeKind.Local).AddTicks(8164),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.31,
                            ImagePath = "https://picsum.photos/640/480/?image=502",
                            IsActive = true,
                            MasterId = new Guid("2003731c-1630-451a-985e-8624f7884dff"),
                            ProductName = "Americano",
                            Status = 0,
                            UnitPrice = 622.74m,
                            UnitsInStock = (short)40,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HotCat.Model.Entities.Table", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TableNumber")
                        .HasMaxLength(45)
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HotCat.Model.Entities.Order", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", "AppUser")
                        .WithMany("Orders")
                        .HasForeignKey("AppUserId");

                    b.HasOne("HotCat.Model.Entities.Table", "Table")
                        .WithMany("Orders")
                        .HasForeignKey("TableId");

                    b.Navigation("AppUser");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("HotCat.Model.Entities.OrderDetail", b =>
                {
                    b.HasOne("HotCat.Model.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HotCat.Model.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Product", b =>
                {
                    b.HasOne("HotCat.Model.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotCat.Model.Entities.AppUser", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Table", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
