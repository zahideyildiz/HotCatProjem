// <auto-generated />
using System;
using HotCat.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotCatCafe.MVC.Migrations
{
    [DbContext(typeof(HotCatContext))]
    [Migration("20240914203109_ProductModelUpdate")]
    partial class ProductModelUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotCat.Model.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("HotCat.Model.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("HotCat.Model.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Coffees",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 851, DateTimeKind.Local).AddTicks(8509),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Aliquid id nesciunt sed eum.",
                            IsActive = true,
                            MasterId = new Guid("e51334ff-9bb0-4922-b620-b8490b83ea5b"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Teas",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 851, DateTimeKind.Local).AddTicks(8692),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Harum officiis placeat aliquam illo quis sapiente voluptatem nulla.",
                            IsActive = true,
                            MasterId = new Guid("798b9383-ac68-4bae-9f77-27f8652df117"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Cold Beverages",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 851, DateTimeKind.Local).AddTicks(8721),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Repellendus quia voluptatibus odit qui eligendi aperiam voluptatem molestiae ipsum.",
                            IsActive = true,
                            MasterId = new Guid("cb61d77c-3dcb-4936-b93c-ce7a7a869f82"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            CategoryName = "Breakfast",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 851, DateTimeKind.Local).AddTicks(8747),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Quia eligendi qui voluptatem et ipsum consectetur est.",
                            IsActive = true,
                            MasterId = new Guid("5a66b6d3-efa6-4af7-a0a0-984133461652"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            CategoryName = "Salads",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 851, DateTimeKind.Local).AddTicks(8765),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Repellendus ipsam itaque sapiente facere.",
                            IsActive = true,
                            MasterId = new Guid("a9d6d23d-1789-4aba-b293-4da68e771531"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            CategoryName = "Burgers",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 851, DateTimeKind.Local).AddTicks(8779),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "İllo dolore quos.",
                            IsActive = true,
                            MasterId = new Guid("63f697fe-f4d5-484f-a3b9-1e886e274281"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            CategoryName = "Pizzas",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 851, DateTimeKind.Local).AddTicks(8798),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Cupiditate temporibus sed accusantium.",
                            IsActive = true,
                            MasterId = new Guid("d24dc5d2-f325-4aa4-b9ab-a16d49ad79f5"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            CategoryName = "Desserts",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 851, DateTimeKind.Local).AddTicks(8809),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Consectetur sed est temporibus.",
                            IsActive = true,
                            MasterId = new Guid("a300e9d1-d8b9-4c37-8146-b8ad6dab0b94"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            CategoryName = "Cakes",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 851, DateTimeKind.Local).AddTicks(8819),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Ad sint architecto et qui incidunt dolorem molestiae magni.",
                            IsActive = true,
                            MasterId = new Guid("4012495b-789e-461d-85c1-9ca6af5ea9ce"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            CategoryName = "Ice Creams",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 851, DateTimeKind.Local).AddTicks(8867),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Saepe rerum illum.",
                            IsActive = true,
                            MasterId = new Guid("77abab2b-cc1a-4a2a-8d77-113edb207324"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HotCat.Model.Entities.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<Guid?>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("OrderDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 854, DateTimeKind.Local).AddTicks(7253),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Brendan Hintz",
                            IsActive = true,
                            MasterId = new Guid("3e2e8014-25e6-40b0-ba88-a6a5eb485660"),
                            OrderDate = new DateTime(2024, 1, 17, 22, 13, 45, 694, DateTimeKind.Local).AddTicks(1404),
                            Status = 0,
                            TotalAmount = 499.67m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 855, DateTimeKind.Local).AddTicks(694),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Brendan Hintz",
                            IsActive = true,
                            MasterId = new Guid("2a857a4e-cf93-4b0d-8a3a-344d2ffc8789"),
                            OrderDate = new DateTime(2023, 9, 16, 11, 50, 30, 371, DateTimeKind.Local).AddTicks(5531),
                            Status = 0,
                            TotalAmount = 378.77m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 855, DateTimeKind.Local).AddTicks(770),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Brendan Hintz",
                            IsActive = true,
                            MasterId = new Guid("d2ce1315-dcd8-4a80-9091-fea8297d2266"),
                            OrderDate = new DateTime(2024, 5, 1, 11, 49, 9, 254, DateTimeKind.Local).AddTicks(2844),
                            Status = 0,
                            TotalAmount = 65.57m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 855, DateTimeKind.Local).AddTicks(777),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Brendan Hintz",
                            IsActive = true,
                            MasterId = new Guid("0b49faac-6f3f-4437-87b6-840bfd8e9955"),
                            OrderDate = new DateTime(2024, 8, 15, 7, 45, 40, 660, DateTimeKind.Local).AddTicks(9268),
                            Status = 0,
                            TotalAmount = 337.69m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 855, DateTimeKind.Local).AddTicks(783),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Brendan Hintz",
                            IsActive = true,
                            MasterId = new Guid("0449aa43-9e2f-4cc3-959c-a0ef375f7780"),
                            OrderDate = new DateTime(2024, 6, 6, 5, 9, 11, 859, DateTimeKind.Local).AddTicks(1340),
                            Status = 0,
                            TotalAmount = 102.28m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 855, DateTimeKind.Local).AddTicks(789),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Brendan Hintz",
                            IsActive = true,
                            MasterId = new Guid("25e30e57-9f70-4066-9638-bdbeb4d99a6d"),
                            OrderDate = new DateTime(2024, 7, 10, 18, 57, 51, 415, DateTimeKind.Local).AddTicks(4388),
                            Status = 0,
                            TotalAmount = 291.87m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 855, DateTimeKind.Local).AddTicks(799),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Brendan Hintz",
                            IsActive = true,
                            MasterId = new Guid("c36c7424-ba44-4746-97a7-da1b2298174d"),
                            OrderDate = new DateTime(2023, 10, 9, 10, 5, 49, 420, DateTimeKind.Local).AddTicks(9534),
                            Status = 0,
                            TotalAmount = 280.05m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 855, DateTimeKind.Local).AddTicks(805),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Brendan Hintz",
                            IsActive = true,
                            MasterId = new Guid("7b35a7c6-02be-4f66-b949-d75fecd620ed"),
                            OrderDate = new DateTime(2024, 6, 26, 0, 55, 48, 237, DateTimeKind.Local).AddTicks(9204),
                            Status = 0,
                            TotalAmount = 440.11m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 855, DateTimeKind.Local).AddTicks(810),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Brendan Hintz",
                            IsActive = true,
                            MasterId = new Guid("f305c34e-5a37-438a-a5e6-e42331487618"),
                            OrderDate = new DateTime(2024, 4, 7, 6, 32, 7, 832, DateTimeKind.Local).AddTicks(1570),
                            Status = 0,
                            TotalAmount = 357.61m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 855, DateTimeKind.Local).AddTicks(847),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Brendan Hintz",
                            IsActive = true,
                            MasterId = new Guid("83ce24a3-d196-48d2-abf5-4960f7711967"),
                            OrderDate = new DateTime(2023, 11, 26, 14, 22, 44, 15, DateTimeKind.Local).AddTicks(7969),
                            Status = 0,
                            TotalAmount = 188.23m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 11,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 855, DateTimeKind.Local).AddTicks(853),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Brendan Hintz",
                            IsActive = true,
                            MasterId = new Guid("1c99ff79-640b-4740-8cd8-64e29796ba6e"),
                            OrderDate = new DateTime(2023, 10, 13, 22, 47, 15, 566, DateTimeKind.Local).AddTicks(8097),
                            Status = 0,
                            TotalAmount = 366.97m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 12,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 855, DateTimeKind.Local).AddTicks(858),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Brendan Hintz",
                            IsActive = true,
                            MasterId = new Guid("f9954099-12a2-4fa9-9363-f57fed36dead"),
                            OrderDate = new DateTime(2024, 7, 22, 9, 53, 3, 74, DateTimeKind.Local).AddTicks(9420),
                            Status = 0,
                            TotalAmount = 226.27m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 13,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 855, DateTimeKind.Local).AddTicks(862),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Brendan Hintz",
                            IsActive = true,
                            MasterId = new Guid("415cb647-ab5c-4889-a00e-b0cd8e0dc9f4"),
                            OrderDate = new DateTime(2024, 1, 13, 8, 3, 5, 252, DateTimeKind.Local).AddTicks(1664),
                            Status = 0,
                            TotalAmount = 37.25m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 14,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 855, DateTimeKind.Local).AddTicks(867),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Brendan Hintz",
                            IsActive = true,
                            MasterId = new Guid("b6a6e84c-b334-40df-99fd-6bb3c6368b3a"),
                            OrderDate = new DateTime(2024, 9, 8, 9, 44, 19, 101, DateTimeKind.Local).AddTicks(7200),
                            Status = 0,
                            TotalAmount = 216.47m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 15,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 855, DateTimeKind.Local).AddTicks(874),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Brendan Hintz",
                            IsActive = true,
                            MasterId = new Guid("95022164-2fad-4b81-a7fe-bf3e18b32387"),
                            OrderDate = new DateTime(2023, 10, 21, 11, 43, 25, 886, DateTimeKind.Local).AddTicks(6669),
                            Status = 0,
                            TotalAmount = 290.57m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 16,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 855, DateTimeKind.Local).AddTicks(879),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Brendan Hintz",
                            IsActive = true,
                            MasterId = new Guid("b210a6f6-20be-4b62-87bb-6ff4b52b6935"),
                            OrderDate = new DateTime(2024, 9, 11, 18, 23, 8, 410, DateTimeKind.Local).AddTicks(2575),
                            Status = 0,
                            TotalAmount = 465.28m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 17,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 855, DateTimeKind.Local).AddTicks(883),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Brendan Hintz",
                            IsActive = true,
                            MasterId = new Guid("c5d1e010-3c05-46ba-a9e8-dc584fdd05a6"),
                            OrderDate = new DateTime(2024, 2, 15, 10, 30, 41, 962, DateTimeKind.Local).AddTicks(7583),
                            Status = 0,
                            TotalAmount = 421.05m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 18,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 855, DateTimeKind.Local).AddTicks(889),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Brendan Hintz",
                            IsActive = true,
                            MasterId = new Guid("106a9788-f8b1-4186-b02c-1fec3c495e86"),
                            OrderDate = new DateTime(2023, 12, 27, 22, 48, 19, 949, DateTimeKind.Local).AddTicks(6553),
                            Status = 0,
                            TotalAmount = 375.03m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 19,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 855, DateTimeKind.Local).AddTicks(894),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Brendan Hintz",
                            IsActive = true,
                            MasterId = new Guid("f18baeb8-9b8e-4492-9fde-e8d167fe7de7"),
                            OrderDate = new DateTime(2024, 9, 3, 16, 41, 36, 666, DateTimeKind.Local).AddTicks(3438),
                            Status = 0,
                            TotalAmount = 370.27m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 20,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 855, DateTimeKind.Local).AddTicks(899),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Brendan Hintz",
                            IsActive = true,
                            MasterId = new Guid("f5f2a505-6264-4bd8-ba95-0cb4ca0c7bed"),
                            OrderDate = new DateTime(2023, 9, 21, 10, 23, 43, 286, DateTimeKind.Local).AddTicks(2275),
                            Status = 0,
                            TotalAmount = 163.35m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HotCat.Model.Entities.OrderDetail", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryId = 8,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 853, DateTimeKind.Local).AddTicks(2171),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.20999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=1023",
                            IsActive = true,
                            MasterId = new Guid("386e9795-e028-413c-a759-65cc46d0bc65"),
                            ProductName = "Frappé",
                            Status = 0,
                            UnitPrice = 216.69m,
                            UnitsInStock = (short)79,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 853, DateTimeKind.Local).AddTicks(2328),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.02,
                            ImagePath = "https://picsum.photos/640/480/?image=981",
                            IsActive = true,
                            MasterId = new Guid("1f861580-3227-43a0-8ea2-385a8fa9077f"),
                            ProductName = "Tiramisu",
                            Status = 0,
                            UnitPrice = 181.61m,
                            UnitsInStock = (short)37,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CategoryId = 9,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 853, DateTimeKind.Local).AddTicks(2349),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.40999999999999998,
                            ImagePath = "https://picsum.photos/640/480/?image=960",
                            IsActive = true,
                            MasterId = new Guid("86b3cc5f-d735-4d33-af51-8346bedece7c"),
                            ProductName = "Muffin",
                            Status = 0,
                            UnitPrice = 963.09m,
                            UnitsInStock = (short)61,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            CategoryId = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 853, DateTimeKind.Local).AddTicks(2358),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.19,
                            ImagePath = "https://picsum.photos/640/480/?image=111",
                            IsActive = true,
                            MasterId = new Guid("fdb083c3-fea9-4fa6-971d-69ecc2476ead"),
                            ProductName = "Latte",
                            Status = 0,
                            UnitPrice = 309.79m,
                            UnitsInStock = (short)52,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            CategoryId = 8,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 853, DateTimeKind.Local).AddTicks(2366),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.070000000000000007,
                            ImagePath = "https://picsum.photos/640/480/?image=757",
                            IsActive = true,
                            MasterId = new Guid("a7abaab2-b6e6-4500-b1e1-3a2c744e0757"),
                            ProductName = "Frappé",
                            Status = 0,
                            UnitPrice = 742.03m,
                            UnitsInStock = (short)100,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            CategoryId = 5,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 853, DateTimeKind.Local).AddTicks(2386),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.11,
                            ImagePath = "https://picsum.photos/640/480/?image=373",
                            IsActive = true,
                            MasterId = new Guid("255f964d-1c4a-4558-9022-8b1511c4c427"),
                            ProductName = "Espresso",
                            Status = 0,
                            UnitPrice = 773.12m,
                            UnitsInStock = (short)80,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 853, DateTimeKind.Local).AddTicks(2393),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.02,
                            ImagePath = "https://picsum.photos/640/480/?image=799",
                            IsActive = true,
                            MasterId = new Guid("c7f2e8ea-1fa2-43f5-a436-d5d5c6bb1c14"),
                            ProductName = "Cheesecake",
                            Status = 0,
                            UnitPrice = 856.00m,
                            UnitsInStock = (short)46,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            CategoryId = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 853, DateTimeKind.Local).AddTicks(2400),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.23000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=853",
                            IsActive = true,
                            MasterId = new Guid("e16a35a8-f852-4ba7-a1c9-6f49dd90265b"),
                            ProductName = "Espresso Macchiato",
                            Status = 0,
                            UnitPrice = 929.43m,
                            UnitsInStock = (short)7,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            CategoryId = 9,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 853, DateTimeKind.Local).AddTicks(2407),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.40999999999999998,
                            ImagePath = "https://picsum.photos/640/480/?image=564",
                            IsActive = true,
                            MasterId = new Guid("1306faec-32fb-4a28-b248-b43265af3afd"),
                            ProductName = "Iced Coffee",
                            Status = 0,
                            UnitPrice = 262.30m,
                            UnitsInStock = (short)60,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 853, DateTimeKind.Local).AddTicks(2415),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.42999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=154",
                            IsActive = true,
                            MasterId = new Guid("e6cafd3b-4bf6-47ab-b020-d600a563e01a"),
                            ProductName = "Cold Brew",
                            Status = 0,
                            UnitPrice = 302.53m,
                            UnitsInStock = (short)43,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 11,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 853, DateTimeKind.Local).AddTicks(2425),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.5,
                            ImagePath = "https://picsum.photos/640/480/?image=1024",
                            IsActive = true,
                            MasterId = new Guid("7fb36b7a-0cc3-4f71-bcd1-10851203baca"),
                            ProductName = "Cold Brew",
                            Status = 0,
                            UnitPrice = 132.29m,
                            UnitsInStock = (short)97,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 12,
                            CategoryId = 5,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 853, DateTimeKind.Local).AddTicks(2433),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.10000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=75",
                            IsActive = true,
                            MasterId = new Guid("6e3d3b5d-3550-4233-bf50-4e3359e4ecdb"),
                            ProductName = "Profiterole",
                            Status = 0,
                            UnitPrice = 935.47m,
                            UnitsInStock = (short)20,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 13,
                            CategoryId = 4,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 853, DateTimeKind.Local).AddTicks(2441),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.070000000000000007,
                            ImagePath = "https://picsum.photos/640/480/?image=791",
                            IsActive = true,
                            MasterId = new Guid("92836d30-1b2e-41eb-98f2-305c48da2625"),
                            ProductName = "Profiterole",
                            Status = 0,
                            UnitPrice = 101.53m,
                            UnitsInStock = (short)65,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 14,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 853, DateTimeKind.Local).AddTicks(2472),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.38,
                            ImagePath = "https://picsum.photos/640/480/?image=258",
                            IsActive = true,
                            MasterId = new Guid("c5aa72ea-e54f-4485-97a2-2550957ba3e7"),
                            ProductName = "Profiterole",
                            Status = 0,
                            UnitPrice = 657.41m,
                            UnitsInStock = (short)91,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 15,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 853, DateTimeKind.Local).AddTicks(2479),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.040000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=610",
                            IsActive = true,
                            MasterId = new Guid("ceb25fe3-c0e1-48a6-a7b7-330bef204d15"),
                            ProductName = "Americano",
                            Status = 0,
                            UnitPrice = 136.98m,
                            UnitsInStock = (short)4,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 16,
                            CategoryId = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 853, DateTimeKind.Local).AddTicks(2487),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.42999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=81",
                            IsActive = true,
                            MasterId = new Guid("c78d7a46-6c2b-4905-b1ff-382a9452dfa9"),
                            ProductName = "Waffle",
                            Status = 0,
                            UnitPrice = 3.90m,
                            UnitsInStock = (short)93,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 17,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 853, DateTimeKind.Local).AddTicks(2495),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.20999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=783",
                            IsActive = true,
                            MasterId = new Guid("4bc9af1c-3037-4179-985c-ad34670548b4"),
                            ProductName = "Profiterole",
                            Status = 0,
                            UnitPrice = 96.30m,
                            UnitsInStock = (short)38,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 18,
                            CategoryId = 10,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 853, DateTimeKind.Local).AddTicks(2504),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.23999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=524",
                            IsActive = true,
                            MasterId = new Guid("bdc6b014-7fc2-4405-8d54-3021223d65d1"),
                            ProductName = "Flat White",
                            Status = 0,
                            UnitPrice = 524.99m,
                            UnitsInStock = (short)37,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 19,
                            CategoryId = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 853, DateTimeKind.Local).AddTicks(2513),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.22,
                            ImagePath = "https://picsum.photos/640/480/?image=670",
                            IsActive = true,
                            MasterId = new Guid("49427daa-0783-4cfc-a460-d96e192b4ee8"),
                            ProductName = "Latte",
                            Status = 0,
                            UnitPrice = 818.56m,
                            UnitsInStock = (short)68,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 20,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 14, 23, 31, 9, 853, DateTimeKind.Local).AddTicks(2520),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.25,
                            ImagePath = "https://picsum.photos/640/480/?image=212",
                            IsActive = true,
                            MasterId = new Guid("4a73c52b-db66-4272-85ca-5b90e3210c5d"),
                            ProductName = "Profiterole",
                            Status = 0,
                            UnitPrice = 836.93m,
                            UnitsInStock = (short)97,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HotCat.Model.Entities.Order", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", "AppUser")
                        .WithMany("Orders")
                        .HasForeignKey("AppUserId");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("HotCat.Model.Entities.OrderDetail", b =>
                {
                    b.HasOne("HotCat.Model.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HotCat.Model.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Product", b =>
                {
                    b.HasOne("HotCat.Model.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotCat.Model.Entities.AppUser", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
