// <auto-generated />
using System;
using HotCat.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotCatCafe.MVC.Migrations
{
    [DbContext(typeof(HotCatContext))]
    partial class HotCatContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotCat.Model.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("HotCat.Model.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("HotCat.Model.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Coffees",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 717, DateTimeKind.Local).AddTicks(203),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Fugit et commodi qui dolore facilis quae ab.",
                            IsActive = true,
                            MasterId = new Guid("d046ad26-db0e-4c46-98f8-8dafb1559c4a"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Teas",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 717, DateTimeKind.Local).AddTicks(384),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Voluptatem vel eos ab accusantium itaque.",
                            IsActive = true,
                            MasterId = new Guid("052e3274-e45b-41a7-94f3-878020f9f051"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Cold Beverages",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 717, DateTimeKind.Local).AddTicks(416),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Dolor qui accusantium et ut officiis ab.",
                            IsActive = true,
                            MasterId = new Guid("bf760b5d-fddc-4b36-bca5-3cfb512eb4f0"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            CategoryName = "Breakfast",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 717, DateTimeKind.Local).AddTicks(433),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Et dolorem suscipit quis qui tenetur cum ea.",
                            IsActive = true,
                            MasterId = new Guid("aa1904c6-5e2b-4e02-b30a-11487420ede3"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            CategoryName = "Salads",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 717, DateTimeKind.Local).AddTicks(480),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Fugit tempora doloremque et neque consectetur consequuntur eius exercitationem ea.",
                            IsActive = true,
                            MasterId = new Guid("e2b556c4-cfe3-4551-9a24-d9a6c12f48bf"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            CategoryName = "Burgers",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 717, DateTimeKind.Local).AddTicks(508),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Consequatur ab aut est quod officia totam quis.",
                            IsActive = true,
                            MasterId = new Guid("e30b8b68-1ef2-4e31-a1c5-148a4cd19b62"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            CategoryName = "Pizzas",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 717, DateTimeKind.Local).AddTicks(530),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Aut fugiat inventore ad reiciendis rerum ipsa nemo incidunt.",
                            IsActive = true,
                            MasterId = new Guid("3fd7328a-1024-448d-b8bd-615cb6868f03"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            CategoryName = "Desserts",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 717, DateTimeKind.Local).AddTicks(553),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Et expedita ea sint tempore inventore accusantium consectetur eveniet ut.",
                            IsActive = true,
                            MasterId = new Guid("52cee3bc-1262-4653-9a7f-d20f093ba5c3"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            CategoryName = "Cakes",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 717, DateTimeKind.Local).AddTicks(577),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Praesentium odit eum vitae.",
                            IsActive = true,
                            MasterId = new Guid("a1f1e55c-62cf-45db-b2ff-2b1aed30fc3e"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            CategoryName = "Ice Creams",
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 717, DateTimeKind.Local).AddTicks(589),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Vel maiores aperiam voluptas praesentium vel molestiae molestiae error.",
                            IsActive = true,
                            MasterId = new Guid("02189191-b66d-4c46-acb7-5d478ca7c134"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HotCat.Model.Entities.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<Guid?>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("OrderDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 720, DateTimeKind.Local).AddTicks(1394),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Hope Parker",
                            IsActive = true,
                            MasterId = new Guid("397924f6-0263-4113-a34c-59031bba343a"),
                            OrderDate = new DateTime(2023, 11, 8, 6, 5, 28, 528, DateTimeKind.Local).AddTicks(1038),
                            Status = 0,
                            TotalAmount = 433.79m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 720, DateTimeKind.Local).AddTicks(6116),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Hope Parker",
                            IsActive = true,
                            MasterId = new Guid("06eb7e40-392e-4773-a75a-6847535aa838"),
                            OrderDate = new DateTime(2023, 11, 26, 0, 27, 2, 16, DateTimeKind.Local).AddTicks(3964),
                            Status = 0,
                            TotalAmount = 107.36m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 720, DateTimeKind.Local).AddTicks(6190),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Hope Parker",
                            IsActive = true,
                            MasterId = new Guid("8b01261b-f2e1-494b-81f9-546987e3b77f"),
                            OrderDate = new DateTime(2024, 7, 26, 12, 3, 26, 473, DateTimeKind.Local).AddTicks(1408),
                            Status = 0,
                            TotalAmount = 153.42m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 720, DateTimeKind.Local).AddTicks(6198),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Hope Parker",
                            IsActive = true,
                            MasterId = new Guid("d0c8d0f8-476e-4e09-9f1c-e3fabc84273f"),
                            OrderDate = new DateTime(2024, 1, 2, 6, 17, 41, 962, DateTimeKind.Local).AddTicks(8195),
                            Status = 0,
                            TotalAmount = 63.93m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 720, DateTimeKind.Local).AddTicks(6205),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Hope Parker",
                            IsActive = true,
                            MasterId = new Guid("f1561eb6-e31b-438b-bd28-84a766071826"),
                            OrderDate = new DateTime(2024, 2, 19, 23, 47, 29, 113, DateTimeKind.Local).AddTicks(4533),
                            Status = 0,
                            TotalAmount = 495.90m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 720, DateTimeKind.Local).AddTicks(6213),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Hope Parker",
                            IsActive = true,
                            MasterId = new Guid("e4b70faf-8e36-4d75-a2d8-00e9cbf4634b"),
                            OrderDate = new DateTime(2024, 3, 6, 13, 30, 20, 690, DateTimeKind.Local).AddTicks(4522),
                            Status = 0,
                            TotalAmount = 132.85m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 720, DateTimeKind.Local).AddTicks(6220),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Hope Parker",
                            IsActive = true,
                            MasterId = new Guid("e1201eb7-615a-4b4e-8c01-8e9ed276aff1"),
                            OrderDate = new DateTime(2023, 10, 7, 19, 59, 50, 401, DateTimeKind.Local).AddTicks(7885),
                            Status = 0,
                            TotalAmount = 153.53m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 720, DateTimeKind.Local).AddTicks(6225),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Hope Parker",
                            IsActive = true,
                            MasterId = new Guid("1170b1cc-deb0-4458-a7a7-dc43b82d5411"),
                            OrderDate = new DateTime(2024, 3, 10, 16, 16, 8, 412, DateTimeKind.Local).AddTicks(2123),
                            Status = 0,
                            TotalAmount = 35.75m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 720, DateTimeKind.Local).AddTicks(6230),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Hope Parker",
                            IsActive = true,
                            MasterId = new Guid("b44d5c04-fc4d-4a02-8e3a-f638857f6d0b"),
                            OrderDate = new DateTime(2024, 1, 7, 12, 22, 0, 458, DateTimeKind.Local).AddTicks(9233),
                            Status = 0,
                            TotalAmount = 453.93m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 720, DateTimeKind.Local).AddTicks(6236),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Hope Parker",
                            IsActive = true,
                            MasterId = new Guid("ffd57a0f-86d4-4f9d-9d87-a123c179dc1b"),
                            OrderDate = new DateTime(2024, 3, 10, 18, 34, 19, 983, DateTimeKind.Local).AddTicks(6093),
                            Status = 0,
                            TotalAmount = 156.58m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 11,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 720, DateTimeKind.Local).AddTicks(6242),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Hope Parker",
                            IsActive = true,
                            MasterId = new Guid("2370a11e-efdd-43a8-91f3-6a48e6b9b0bd"),
                            OrderDate = new DateTime(2024, 4, 15, 3, 1, 9, 875, DateTimeKind.Local).AddTicks(2831),
                            Status = 0,
                            TotalAmount = 90.94m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 12,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 720, DateTimeKind.Local).AddTicks(6247),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Hope Parker",
                            IsActive = true,
                            MasterId = new Guid("24d96ff8-fd3e-4929-91b2-f01015c82d0a"),
                            OrderDate = new DateTime(2023, 11, 8, 23, 59, 27, 246, DateTimeKind.Local).AddTicks(5673),
                            Status = 0,
                            TotalAmount = 58.95m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 13,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 720, DateTimeKind.Local).AddTicks(6252),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Hope Parker",
                            IsActive = true,
                            MasterId = new Guid("9b4a1b84-4e11-44ab-a906-41e948085312"),
                            OrderDate = new DateTime(2024, 7, 10, 4, 48, 0, 696, DateTimeKind.Local).AddTicks(8072),
                            Status = 0,
                            TotalAmount = 196.07m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 14,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 720, DateTimeKind.Local).AddTicks(6257),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Hope Parker",
                            IsActive = true,
                            MasterId = new Guid("8da91f15-b2c5-4f93-b758-5d1560528fe0"),
                            OrderDate = new DateTime(2024, 6, 15, 5, 32, 28, 332, DateTimeKind.Local).AddTicks(6642),
                            Status = 0,
                            TotalAmount = 325.03m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 15,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 720, DateTimeKind.Local).AddTicks(6295),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Hope Parker",
                            IsActive = true,
                            MasterId = new Guid("9134f6ce-dc29-42d5-888c-1475ddc6f086"),
                            OrderDate = new DateTime(2024, 9, 9, 12, 38, 53, 664, DateTimeKind.Local).AddTicks(4432),
                            Status = 0,
                            TotalAmount = 80.44m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 16,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 720, DateTimeKind.Local).AddTicks(6300),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Hope Parker",
                            IsActive = true,
                            MasterId = new Guid("645aded7-2f85-445f-950c-c51a1e4335b1"),
                            OrderDate = new DateTime(2023, 10, 4, 1, 38, 54, 93, DateTimeKind.Local).AddTicks(6146),
                            Status = 0,
                            TotalAmount = 315.11m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 17,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 720, DateTimeKind.Local).AddTicks(6306),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Hope Parker",
                            IsActive = true,
                            MasterId = new Guid("6778c811-d742-4d05-9f8d-c2338f4d3873"),
                            OrderDate = new DateTime(2024, 8, 11, 21, 18, 30, 298, DateTimeKind.Local).AddTicks(6921),
                            Status = 0,
                            TotalAmount = 184.94m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 18,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 720, DateTimeKind.Local).AddTicks(6313),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Hope Parker",
                            IsActive = true,
                            MasterId = new Guid("b35ece17-9ef6-40d7-b4a8-49c006b2d0a8"),
                            OrderDate = new DateTime(2023, 10, 26, 11, 8, 41, 169, DateTimeKind.Local).AddTicks(7645),
                            Status = 0,
                            TotalAmount = 15.28m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 19,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 720, DateTimeKind.Local).AddTicks(6319),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Hope Parker",
                            IsActive = true,
                            MasterId = new Guid("a59a6f76-a2b6-4f19-8064-efebc765cb2c"),
                            OrderDate = new DateTime(2024, 2, 2, 18, 30, 2, 568, DateTimeKind.Local).AddTicks(4781),
                            Status = 0,
                            TotalAmount = 415.15m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 20,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 720, DateTimeKind.Local).AddTicks(6324),
                            CreatedIpAddress = "192.168.1.1",
                            CustomerName = "Hope Parker",
                            IsActive = true,
                            MasterId = new Guid("cdfb2087-368c-4be0-be1b-fc7132394e4a"),
                            OrderDate = new DateTime(2023, 10, 21, 16, 13, 32, 36, DateTimeKind.Local).AddTicks(1642),
                            Status = 0,
                            TotalAmount = 492.10m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HotCat.Model.Entities.OrderDetail", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 718, DateTimeKind.Local).AddTicks(4839),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.46999999999999997,
                            ImagePath = "https://picsum.photos/640/480/?image=994",
                            IsActive = true,
                            MasterId = new Guid("67c2b364-6797-460e-bd47-112cb404193e"),
                            ProductName = "Cookie",
                            Status = 0,
                            UnitPrice = 817.89m,
                            UnitsInStock = (short)8,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 718, DateTimeKind.Local).AddTicks(4994),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.16,
                            ImagePath = "https://picsum.photos/640/480/?image=425",
                            IsActive = true,
                            MasterId = new Guid("4a56bfba-cd92-4132-93b4-4b925b733044"),
                            ProductName = "Frappé",
                            Status = 0,
                            UnitPrice = 183.40m,
                            UnitsInStock = (short)42,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 718, DateTimeKind.Local).AddTicks(5005),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.47999999999999998,
                            ImagePath = "https://picsum.photos/640/480/?image=973",
                            IsActive = true,
                            MasterId = new Guid("817269fa-6788-477c-ada1-19cb3c959f9c"),
                            ProductName = "Brownie",
                            Status = 0,
                            UnitPrice = 262.32m,
                            UnitsInStock = (short)87,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            CategoryId = 8,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 718, DateTimeKind.Local).AddTicks(5013),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.42999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=191",
                            IsActive = true,
                            MasterId = new Guid("018d141c-b80b-41bc-8f09-6caa50c5ba56"),
                            ProductName = "Turkish Coffee",
                            Status = 0,
                            UnitPrice = 893.38m,
                            UnitsInStock = (short)57,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            CategoryId = 4,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 718, DateTimeKind.Local).AddTicks(5048),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.40000000000000002,
                            ImagePath = "https://picsum.photos/640/480/?image=440",
                            IsActive = true,
                            MasterId = new Guid("5d9bb6f0-fe91-43ff-a2b5-7177d781f62e"),
                            ProductName = "Cookie",
                            Status = 0,
                            UnitPrice = 494.51m,
                            UnitsInStock = (short)4,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 718, DateTimeKind.Local).AddTicks(5056),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.23999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=45",
                            IsActive = true,
                            MasterId = new Guid("a5d6feba-161f-4a1f-94a6-de2fce14778a"),
                            ProductName = "Cookie",
                            Status = 0,
                            UnitPrice = 871.31m,
                            UnitsInStock = (short)91,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 718, DateTimeKind.Local).AddTicks(5063),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.41999999999999998,
                            ImagePath = "https://picsum.photos/640/480/?image=105",
                            IsActive = true,
                            MasterId = new Guid("f6b259b5-f418-418d-b48a-7f9c8d0e5820"),
                            ProductName = "Latte",
                            Status = 0,
                            UnitPrice = 5.39m,
                            UnitsInStock = (short)10,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 718, DateTimeKind.Local).AddTicks(5072),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.12,
                            ImagePath = "https://picsum.photos/640/480/?image=490",
                            IsActive = true,
                            MasterId = new Guid("a2795191-77bc-44ab-84c3-ee28d0e65907"),
                            ProductName = "Macaron",
                            Status = 0,
                            UnitPrice = 107.73m,
                            UnitsInStock = (short)94,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            CategoryId = 2,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 718, DateTimeKind.Local).AddTicks(5085),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.47999999999999998,
                            ImagePath = "https://picsum.photos/640/480/?image=655",
                            IsActive = true,
                            MasterId = new Guid("9994e48a-7bf4-47fe-b38c-6d84c24bec56"),
                            ProductName = "Cold Brew",
                            Status = 0,
                            UnitPrice = 507.26m,
                            UnitsInStock = (short)94,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            CategoryId = 9,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 718, DateTimeKind.Local).AddTicks(5092),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.34000000000000002,
                            ImagePath = "https://picsum.photos/640/480/?image=497",
                            IsActive = true,
                            MasterId = new Guid("da36566f-43a5-421d-8aaa-742e34878644"),
                            ProductName = "Latte",
                            Status = 0,
                            UnitPrice = 917.79m,
                            UnitsInStock = (short)86,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 11,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 718, DateTimeKind.Local).AddTicks(5100),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.16,
                            ImagePath = "https://picsum.photos/640/480/?image=1021",
                            IsActive = true,
                            MasterId = new Guid("ad176ba8-e151-48af-a040-53781e5ec9b2"),
                            ProductName = "Macaron",
                            Status = 0,
                            UnitPrice = 956.09m,
                            UnitsInStock = (short)76,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 12,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 718, DateTimeKind.Local).AddTicks(5106),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.37,
                            ImagePath = "https://picsum.photos/640/480/?image=29",
                            IsActive = true,
                            MasterId = new Guid("27accde3-b1f9-4aeb-8d02-c8346110eccb"),
                            ProductName = "Brownie",
                            Status = 0,
                            UnitPrice = 279.05m,
                            UnitsInStock = (short)26,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 13,
                            CategoryId = 1,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 718, DateTimeKind.Local).AddTicks(5114),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.20000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=659",
                            IsActive = true,
                            MasterId = new Guid("d1c15546-9413-48eb-b109-f211e4c201ec"),
                            ProductName = "Macaron",
                            Status = 0,
                            UnitPrice = 811.98m,
                            UnitsInStock = (short)84,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 14,
                            CategoryId = 5,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 718, DateTimeKind.Local).AddTicks(5121),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.050000000000000003,
                            ImagePath = "https://picsum.photos/640/480/?image=1070",
                            IsActive = true,
                            MasterId = new Guid("fa9cd7f9-2584-40c7-a0ba-a53bb13489d6"),
                            ProductName = "Brownie",
                            Status = 0,
                            UnitPrice = 709.69m,
                            UnitsInStock = (short)97,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 15,
                            CategoryId = 10,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 718, DateTimeKind.Local).AddTicks(5128),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.040000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=225",
                            IsActive = true,
                            MasterId = new Guid("40398039-9241-452d-bf7f-3f76a5292a54"),
                            ProductName = "Turkish Coffee",
                            Status = 0,
                            UnitPrice = 2.32m,
                            UnitsInStock = (short)19,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 16,
                            CategoryId = 6,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 718, DateTimeKind.Local).AddTicks(5158),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.11,
                            ImagePath = "https://picsum.photos/640/480/?image=68",
                            IsActive = true,
                            MasterId = new Guid("18e3a0e4-d75f-4771-9d11-177be15fd572"),
                            ProductName = "Iced Coffee",
                            Status = 0,
                            UnitPrice = 233.26m,
                            UnitsInStock = (short)43,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 17,
                            CategoryId = 3,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 718, DateTimeKind.Local).AddTicks(5167),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.47999999999999998,
                            ImagePath = "https://picsum.photos/640/480/?image=499",
                            IsActive = true,
                            MasterId = new Guid("caa78ac8-db3a-4f95-910b-6f6a588b0d20"),
                            ProductName = "Americano",
                            Status = 0,
                            UnitPrice = 455.62m,
                            UnitsInStock = (short)56,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 18,
                            CategoryId = 8,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 718, DateTimeKind.Local).AddTicks(5176),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.44,
                            ImagePath = "https://picsum.photos/640/480/?image=737",
                            IsActive = true,
                            MasterId = new Guid("4c1577c5-c44d-417b-bf69-f356591c7bc4"),
                            ProductName = "Brownie",
                            Status = 0,
                            UnitPrice = 864.55m,
                            UnitsInStock = (short)94,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 19,
                            CategoryId = 8,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 718, DateTimeKind.Local).AddTicks(5182),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.32000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=251",
                            IsActive = true,
                            MasterId = new Guid("ad523262-03f2-4611-9478-eacee845fefa"),
                            ProductName = "Chai Tea Latte",
                            Status = 0,
                            UnitPrice = 245.27m,
                            UnitsInStock = (short)88,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 20,
                            CategoryId = 4,
                            CreatedComputerName = "DESKTOP-JSABNAD",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 6, 39, 718, DateTimeKind.Local).AddTicks(5189),
                            CreatedIpAddress = "192.168.1.1",
                            Discount = 0.059999999999999998,
                            ImagePath = "https://picsum.photos/640/480/?image=880",
                            IsActive = true,
                            MasterId = new Guid("783495e2-fe3d-4192-98bf-1c600cb7c654"),
                            ProductName = "Affogato",
                            Status = 0,
                            UnitPrice = 212.04m,
                            UnitsInStock = (short)29,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HotCat.Model.Entities.Order", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", "AppUser")
                        .WithMany("Orders")
                        .HasForeignKey("AppUserId");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("HotCat.Model.Entities.OrderDetail", b =>
                {
                    b.HasOne("HotCat.Model.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HotCat.Model.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Product", b =>
                {
                    b.HasOne("HotCat.Model.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("HotCat.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotCat.Model.Entities.AppUser", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("HotCat.Model.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
